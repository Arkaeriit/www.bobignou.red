{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/jquery-3.4.1.min.js","path":"js/jquery-3.4.1.min.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff2","path":"css/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.png","path":"css/images/banner.png","modified":1,"renderable":1},{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"source/big_files/100000000_primes","path":"big_files/100000000_primes","modified":1,"renderable":0},{"_id":"source/big_files/10000000_primes","path":"big_files/10000000_primes","modified":1,"renderable":0},{"_id":"source/big_files/1000000_primes","path":"big_files/1000000_primes","modified":1,"renderable":0},{"_id":"source/big_files/test.txt","path":"big_files/test.txt","modified":1,"renderable":0}],"Cache":[{"_id":"source/big_files/100000000_primes","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1639405113791},{"_id":"source/big_files/10000000_primes","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1639390413772},{"_id":"source/big_files/1000000_primes","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1639390406232},{"_id":"source/big_files/test.txt","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1639390419262},{"_id":"source/favicon.ico","hash":"9fed46ba9f7cf55e8d9e1bc8d34363415edfba93","modified":1639498212546},{"_id":"source/index.md","hash":"d1da2193acadf71c4cd0de6faa10924a1064843e","modified":1641682058416},{"_id":"source/_posts/BouingBouing.md","hash":"001b038b553537cb8d970c00ac8f2e79aab1c110","modified":1635808270561},{"_id":"source/_posts/Gemini.md","hash":"ec44435345ecdf7792ab97a01d321690b9b18236","modified":1641651461666},{"_id":"source/_posts/Git-server.md","hash":"8844567de89216e50a658370f4fd0fbb199e139d","modified":1641670799035},{"_id":"source/_posts/Running-this-server.md","hash":"828e3cb23d2ad20f745b0a594168ad6d8113617d","modified":1641660485562},{"_id":"source/_posts/primes.md","hash":"7c01147f4a2130f5530c4eb48713aaf6f91614e6","modified":1641659711502},{"_id":"source/_posts/Git-server/soft-serve.png","hash":"fc6103d2dd08c34e757bf16b332b2d485b10e084","modified":1639067663000},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1635501374838},{"_id":"themes/landscape/README.md","hash":"d2772ece6d4422ccdaa0359c3e07588834044052","modified":1635501374838},{"_id":"themes/landscape/_config.yml","hash":"723e2a6469ce5d72146a7514f43922f1d2e479e9","modified":1639498240386},{"_id":"themes/landscape/package.json","hash":"9a94875cbf4c27fbe2e63da0496242addc6d2876","modified":1635501374838},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1635501374838},{"_id":"themes/landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1635501374838},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1635501374838},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1635501374838},{"_id":"themes/landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1635501374838},{"_id":"themes/landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1635501374838},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1635501374838},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1635501374838},{"_id":"themes/landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1635501374848},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1635501374848},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1635501374848},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1635501374848},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1635501374848},{"_id":"themes/landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1635501374848},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1635501374848},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1635501374848},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1635501374888},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1635501374888},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1635501374888},{"_id":"themes/landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1635501374888},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1635501374888},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1635501374888},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1635501374888},{"_id":"themes/landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1635501374888},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"414914ebb159fac1922b056b905e570ac7521925","modified":1635501374878},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1635501374878},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":1635501374878},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"dfd555c00e85ffc4207c88968d12b219c1f086ec","modified":1635501374878},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"6b1b6843ba548b6e744dc1d4395b0654bd220854","modified":1635809234711},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1635501374878},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1635501374878},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"f215d92a882247a7cc5ea80b241bedfcec0ea6ca","modified":1635501374878},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"c1acd247e14588cdf101a69460cb8319c18cd078","modified":1635501374878},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1635501374878},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1635501374878},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1635501374878},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1635501374888},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1635501374888},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1635501374888},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1635501374888},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1635501374868},{"_id":"themes/landscape/source/css/_variables.styl","hash":"581b0cbefdaa5f894922133989dd2d3bf71ded79","modified":1635501374868},{"_id":"themes/landscape/source/css/style.styl","hash":"9c451e5efd72c5bb8b56e8c2b94be731e99db05b","modified":1635501374868},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1635501374848},{"_id":"themes/landscape/source/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1635501374878},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1635501374878},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1635501374878},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1635501374878},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1635501374878},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1635501374878},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1635501374878},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1635501374868},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"80759482d07063c091e940f964a1cf6693d3d406","modified":1635501374868},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1635501374868},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1635501374868},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1635501374868},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1635501374868},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1635501374868},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1635501374868},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1635501374868},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1635501374868},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1635501374878},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1635501374878},{"_id":"themes/landscape/source/css/images/banner.png","hash":"7d960a9ff600bf2981a2993f986c07962e0c3195","modified":1625131025000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1635501374848},{"_id":"themes/landscape/source/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1635501374878},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1635501374858},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1635501374868},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1635501374858},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1635501374848},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1635501374858},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1635501374868},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1635501374858},{"_id":"source/_posts/BouingBouing/BouingBouing.gif","hash":"2ea8c450441bfdce149327e1020f1f1e2fa8710e","modified":1635421745424},{"_id":"public/atom.xml","hash":"bee1b494273be825f2241c599dd53462b60b13a8","modified":1641682133894},{"_id":"public/index.html","hash":"7884f105ca665d884ecd3cc9dae0bdfdf87bf132","modified":1641682133894},{"_id":"public/2022/01/08/Gemini/index.html","hash":"893aaf4bdbb52dea6075eb6579f5f264262ecb31","modified":1641682133894},{"_id":"public/2021/12/09/Git-server/index.html","hash":"7b4a8b019c10aae41546ec67be9601dd7d2b1878","modified":1641682133894},{"_id":"public/2021/10/28/BouingBouing/index.html","hash":"5cc1014bff6f606c3b3ed005a9a71b1cf87f9ad1","modified":1641682133894},{"_id":"public/archives/index.html","hash":"8ff7de07bd07dbf18a0fe44b2dc8528b618134f4","modified":1641682133894},{"_id":"public/archives/2021/index.html","hash":"aee27ef608ddd5807eab927bebd5cd9c9f9fe327","modified":1641682133894},{"_id":"public/archives/2021/10/index.html","hash":"a5d19215679c5015fe2c07c66830de60e1ac5bd1","modified":1641682133894},{"_id":"public/archives/2021/11/index.html","hash":"b5c9963230ba9613f4ada195a9a5d09d4256a1ed","modified":1641682133894},{"_id":"public/archives/2021/12/index.html","hash":"233a8c09d7a90cccc5b00ce20ad871c73f50f05a","modified":1641682133894},{"_id":"public/archives/2022/index.html","hash":"0e74fb184928bed5af9a9725a6b528742dfd3629","modified":1641682133894},{"_id":"public/archives/2022/01/index.html","hash":"1807a7b0a5b5baa3b8330a678ad4535b8ae280a6","modified":1641682133894},{"_id":"public/2021/11/18/Running-this-server/index.html","hash":"80f01eb90865fa7ba8ce429c33c9cbdaddee7f11","modified":1641682133894},{"_id":"public/2021/11/01/primes/index.html","hash":"8ee077aa8eafc7a039f9c77692f8be7fbf6fa8ec","modified":1641682133894},{"_id":"public/big_files/100000000_primes","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1641682133894},{"_id":"public/big_files/10000000_primes","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1641682133894},{"_id":"public/big_files/1000000_primes","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1641682133894},{"_id":"public/big_files/test.txt","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1641682133894},{"_id":"public/css/images/banner.png","hash":"7d960a9ff600bf2981a2993f986c07962e0c3195","modified":1641682133894},{"_id":"public/favicon.ico","hash":"9fed46ba9f7cf55e8d9e1bc8d34363415edfba93","modified":1641682133894},{"_id":"public/2021/12/09/Git-server/soft-serve.png","hash":"fc6103d2dd08c34e757bf16b332b2d485b10e084","modified":1641682133894},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1641682133894},{"_id":"public/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1641682133894},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1641682133894},{"_id":"public/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1641682133894},{"_id":"public/css/style.css","hash":"9921707a7362659ad71a118196c9b33163b776cb","modified":1641682133894},{"_id":"public/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1641682133894},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1641682133894},{"_id":"public/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1641682133894},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1641682133894},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1641682133894},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1641682133894},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1641682133894},{"_id":"public/2021/10/28/BouingBouing/BouingBouing.gif","hash":"2ea8c450441bfdce149327e1020f1f1e2fa8710e","modified":1641682133894}],"Category":[],"Data":[],"Page":[{"layout":"page","title":"Bobignou.red","date":"2020-12-12T23:00:00.000Z","_content":"## What to find here \nOn this blog, I mainly speak about DevOps or programming-related subjects that touch too many parts of a system to be included in a git repository. \n \nIf you want to see the nicer things I made, I should redirect you to my [Github](https://github.com/Arkaeriit). \n \n## Other services \nOn this server, you can also find a [Cyberlander text board](https://cyberland.bobignou.red). \n \nI also host my [personal Git server](https://git.bobignou.red). \n \nIf you want some fun, you could always type the command: \n```shell \nssh -p 2244 snake@bobignou.red \n``` \n \nIf you prefer Gemini over the web, you can find this blog as a Gemini capsule at the URLs `gemini.bobignou.red` and `bobignou.red`.\n\n## Contact\n\nIf you can contact me, you can send an email to <a href = \"mailto: maxbouillot@gmail.com\">maxbouillot@gmail.com</a>.\n\n","source":"index.md","raw":"---\nlayout: page\ntitle: Bobignou.red\ndate: 2020-12-13\n---\n## What to find here \nOn this blog, I mainly speak about DevOps or programming-related subjects that touch too many parts of a system to be included in a git repository. \n \nIf you want to see the nicer things I made, I should redirect you to my [Github](https://github.com/Arkaeriit). \n \n## Other services \nOn this server, you can also find a [Cyberlander text board](https://cyberland.bobignou.red). \n \nI also host my [personal Git server](https://git.bobignou.red). \n \nIf you want some fun, you could always type the command: \n```shell \nssh -p 2244 snake@bobignou.red \n``` \n \nIf you prefer Gemini over the web, you can find this blog as a Gemini capsule at the URLs `gemini.bobignou.red` and `bobignou.red`.\n\n## Contact\n\nIf you can contact me, you can send an email to <a href = \"mailto: maxbouillot@gmail.com\">maxbouillot@gmail.com</a>.\n\n","updated":"2022-01-08T22:47:38.416Z","path":"index.html","comments":1,"_id":"cky6f5oee0000cflz9l9e13if","content":"<h2 id=\"What-to-find-here\"><a href=\"#What-to-find-here\" class=\"headerlink\" title=\"What to find here\"></a>What to find here</h2><p>On this blog, I mainly speak about DevOps or programming-related subjects that touch too many parts of a system to be included in a git repository. </p>\n<p>If you want to see the nicer things I made, I should redirect you to my <a href=\"https://github.com/Arkaeriit\">Github</a>. </p>\n<h2 id=\"Other-services\"><a href=\"#Other-services\" class=\"headerlink\" title=\"Other services\"></a>Other services</h2><p>On this server, you can also find a <a href=\"https://cyberland.bobignou.red/\">Cyberlander text board</a>. </p>\n<p>I also host my <a href=\"https://git.bobignou.red/\">personal Git server</a>. </p>\n<p>If you want some fun, you could always type the command: </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -p 2244 snake@bobignou.red </span><br></pre></td></tr></table></figure>\n<p>If you prefer Gemini over the web, you can find this blog as a Gemini capsule at the URLs <code>gemini.bobignou.red</code> and <code>bobignou.red</code>.</p>\n<h2 id=\"Contact\"><a href=\"#Contact\" class=\"headerlink\" title=\"Contact\"></a>Contact</h2><p>If you can contact me, you can send an email to <a href = \"mailto: maxbouillot@gmail.com\">maxbouillot@gmail.com</a>.</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"What-to-find-here\"><a href=\"#What-to-find-here\" class=\"headerlink\" title=\"What to find here\"></a>What to find here</h2><p>On this blog, I mainly speak about DevOps or programming-related subjects that touch too many parts of a system to be included in a git repository. </p>\n<p>If you want to see the nicer things I made, I should redirect you to my <a href=\"https://github.com/Arkaeriit\">Github</a>. </p>\n<h2 id=\"Other-services\"><a href=\"#Other-services\" class=\"headerlink\" title=\"Other services\"></a>Other services</h2><p>On this server, you can also find a <a href=\"https://cyberland.bobignou.red/\">Cyberlander text board</a>. </p>\n<p>I also host my <a href=\"https://git.bobignou.red/\">personal Git server</a>. </p>\n<p>If you want some fun, you could always type the command: </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -p 2244 snake@bobignou.red </span><br></pre></td></tr></table></figure>\n<p>If you prefer Gemini over the web, you can find this blog as a Gemini capsule at the URLs <code>gemini.bobignou.red</code> and <code>bobignou.red</code>.</p>\n<h2 id=\"Contact\"><a href=\"#Contact\" class=\"headerlink\" title=\"Contact\"></a>Contact</h2><p>If you can contact me, you can send an email to <a href = \"mailto: maxbouillot@gmail.com\">maxbouillot@gmail.com</a>.</p>\n"}],"Post":[{"title":"BouingBouing","date":"2021-10-28T11:51:34.000Z","_content":"\nBouingBouing is a cute seal that loves to bounce on the ice caps.\n\n![BouingBouing](BouingBouing.gif)\n\n","source":"_posts/BouingBouing.md","raw":"---\ntitle: BouingBouing\ndate: 2021-10-28 13:51:34\ntags:\n---\n\nBouingBouing is a cute seal that loves to bounce on the ice caps.\n\n![BouingBouing](BouingBouing.gif)\n\n","slug":"BouingBouing","published":1,"updated":"2021-11-01T23:11:10.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cky6f5ofa0001cflz174f20mt","content":"<p>BouingBouing is a cute seal that loves to bounce on the ice caps.</p>\n<p><img src=\"/2021/10/28/BouingBouing/BouingBouing.gif\" alt=\"BouingBouing\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>BouingBouing is a cute seal that loves to bounce on the ice caps.</p>\n<p><img src=\"/2021/10/28/BouingBouing/BouingBouing.gif\" alt=\"BouingBouing\"></p>\n"},{"title":"Gemini","date":"2022-01-08T14:16:24.000Z","_content":"\n## Gemini protocol\n\n[Gemini](https://gemini.circumlunar.space/) is a nice alternative to the web. It is lighter than the web and very simple to host so I decided to host a copy of this blog as a Gemini server.\n\n## Making Gemini pages\n\nInstead of HTML, Gemini clients and servers expect to handle pages written in Gemtext, a markup language made for the protocol.\n\nGemtext looks a lot like Markdown and is quite easy to write by hand. One of the biggest differences is that the links are not presented in the same way and can not be inlined in the text. This means that I can't reuse the markdown text I use to generate this blog.\n\nFortunately, a tool exists to easily convert markdown to Gemtext, [md2gemini](https://github.com/makeworld-the-better-one/md2gemini). I use it to make the bulk of the conversion and then, I polish by hand the generated Gemtext file.\n\n## Hosting a Gemini server\n\nTo host a Gemini page (also known as \"capsule\"), a lot of software has been written. Those programs are not as feature-full as Apache or Nginx for the web but they are enough to host a simple blog (or maybe the proper term would be gem-log?). I choose to use [Agate](https://github.com/mbrubeck/agate) because it is very easy to use.\n\n## Accessing the Geminispace\n\nOnce your Gemini capsule is live, you need a browser to access it. I really like [Amfora](https://github.com/makeworld-the-better-one/amfora) because I feel like it is a very good balance between simplicity and good features.\n\nYou can then use it to go read this blog on the Geminispace with the command:\n```\namfora bobignou.red\n```\n\n","source":"_posts/Gemini.md","raw":"---\ntitle: Gemini\ndate: 2022-01-08 15:16:24\ntags:\n---\n\n## Gemini protocol\n\n[Gemini](https://gemini.circumlunar.space/) is a nice alternative to the web. It is lighter than the web and very simple to host so I decided to host a copy of this blog as a Gemini server.\n\n## Making Gemini pages\n\nInstead of HTML, Gemini clients and servers expect to handle pages written in Gemtext, a markup language made for the protocol.\n\nGemtext looks a lot like Markdown and is quite easy to write by hand. One of the biggest differences is that the links are not presented in the same way and can not be inlined in the text. This means that I can't reuse the markdown text I use to generate this blog.\n\nFortunately, a tool exists to easily convert markdown to Gemtext, [md2gemini](https://github.com/makeworld-the-better-one/md2gemini). I use it to make the bulk of the conversion and then, I polish by hand the generated Gemtext file.\n\n## Hosting a Gemini server\n\nTo host a Gemini page (also known as \"capsule\"), a lot of software has been written. Those programs are not as feature-full as Apache or Nginx for the web but they are enough to host a simple blog (or maybe the proper term would be gem-log?). I choose to use [Agate](https://github.com/mbrubeck/agate) because it is very easy to use.\n\n## Accessing the Geminispace\n\nOnce your Gemini capsule is live, you need a browser to access it. I really like [Amfora](https://github.com/makeworld-the-better-one/amfora) because I feel like it is a very good balance between simplicity and good features.\n\nYou can then use it to go read this blog on the Geminispace with the command:\n```\namfora bobignou.red\n```\n\n","slug":"Gemini","published":1,"updated":"2022-01-08T14:17:41.666Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cky6f5ogd0002cflzdgx73ilq","content":"<h2 id=\"Gemini-protocol\"><a href=\"#Gemini-protocol\" class=\"headerlink\" title=\"Gemini protocol\"></a>Gemini protocol</h2><p><a href=\"https://gemini.circumlunar.space/\">Gemini</a> is a nice alternative to the web. It is lighter than the web and very simple to host so I decided to host a copy of this blog as a Gemini server.</p>\n<h2 id=\"Making-Gemini-pages\"><a href=\"#Making-Gemini-pages\" class=\"headerlink\" title=\"Making Gemini pages\"></a>Making Gemini pages</h2><p>Instead of HTML, Gemini clients and servers expect to handle pages written in Gemtext, a markup language made for the protocol.</p>\n<p>Gemtext looks a lot like Markdown and is quite easy to write by hand. One of the biggest differences is that the links are not presented in the same way and can not be inlined in the text. This means that I can’t reuse the markdown text I use to generate this blog.</p>\n<p>Fortunately, a tool exists to easily convert markdown to Gemtext, <a href=\"https://github.com/makeworld-the-better-one/md2gemini\">md2gemini</a>. I use it to make the bulk of the conversion and then, I polish by hand the generated Gemtext file.</p>\n<h2 id=\"Hosting-a-Gemini-server\"><a href=\"#Hosting-a-Gemini-server\" class=\"headerlink\" title=\"Hosting a Gemini server\"></a>Hosting a Gemini server</h2><p>To host a Gemini page (also known as “capsule”), a lot of software has been written. Those programs are not as feature-full as Apache or Nginx for the web but they are enough to host a simple blog (or maybe the proper term would be gem-log?). I choose to use <a href=\"https://github.com/mbrubeck/agate\">Agate</a> because it is very easy to use.</p>\n<h2 id=\"Accessing-the-Geminispace\"><a href=\"#Accessing-the-Geminispace\" class=\"headerlink\" title=\"Accessing the Geminispace\"></a>Accessing the Geminispace</h2><p>Once your Gemini capsule is live, you need a browser to access it. I really like <a href=\"https://github.com/makeworld-the-better-one/amfora\">Amfora</a> because I feel like it is a very good balance between simplicity and good features.</p>\n<p>You can then use it to go read this blog on the Geminispace with the command:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">amfora bobignou.red</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Gemini-protocol\"><a href=\"#Gemini-protocol\" class=\"headerlink\" title=\"Gemini protocol\"></a>Gemini protocol</h2><p><a href=\"https://gemini.circumlunar.space/\">Gemini</a> is a nice alternative to the web. It is lighter than the web and very simple to host so I decided to host a copy of this blog as a Gemini server.</p>\n<h2 id=\"Making-Gemini-pages\"><a href=\"#Making-Gemini-pages\" class=\"headerlink\" title=\"Making Gemini pages\"></a>Making Gemini pages</h2><p>Instead of HTML, Gemini clients and servers expect to handle pages written in Gemtext, a markup language made for the protocol.</p>\n<p>Gemtext looks a lot like Markdown and is quite easy to write by hand. One of the biggest differences is that the links are not presented in the same way and can not be inlined in the text. This means that I can’t reuse the markdown text I use to generate this blog.</p>\n<p>Fortunately, a tool exists to easily convert markdown to Gemtext, <a href=\"https://github.com/makeworld-the-better-one/md2gemini\">md2gemini</a>. I use it to make the bulk of the conversion and then, I polish by hand the generated Gemtext file.</p>\n<h2 id=\"Hosting-a-Gemini-server\"><a href=\"#Hosting-a-Gemini-server\" class=\"headerlink\" title=\"Hosting a Gemini server\"></a>Hosting a Gemini server</h2><p>To host a Gemini page (also known as “capsule”), a lot of software has been written. Those programs are not as feature-full as Apache or Nginx for the web but they are enough to host a simple blog (or maybe the proper term would be gem-log?). I choose to use <a href=\"https://github.com/mbrubeck/agate\">Agate</a> because it is very easy to use.</p>\n<h2 id=\"Accessing-the-Geminispace\"><a href=\"#Accessing-the-Geminispace\" class=\"headerlink\" title=\"Accessing the Geminispace\"></a>Accessing the Geminispace</h2><p>Once your Gemini capsule is live, you need a browser to access it. I really like <a href=\"https://github.com/makeworld-the-better-one/amfora\">Amfora</a> because I feel like it is a very good balance between simplicity and good features.</p>\n<p>You can then use it to go read this blog on the Geminispace with the command:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">amfora bobignou.red</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Git server","date":"2021-12-09T13:45:32.000Z","_content":"I recently found a very nice Git server named [Soft Serve](https://github.com/charmbracelet/soft-serve). This software offers both a git server to store repositories and a nice TUI front-end to list the stored repositories.\n\nThis is quite a recent software so there is not a lot of documentation on how to install it. Thus, I want to talk here about how to configure and use it.\n\n![A tasteful TUI](soft-serve.png)\n\n## Setup\n\n### Port forwarding\nAs we want to access our Git server from the outside, the first step is to enable port forwarding. I have chosen to use the default port for Soft Serve which is 23231 so I enabled port forwarding for port 23231 of the internet to port 23231 of my machine on my LAN.\n\nSoft Serve uses SSH for communication with the external world so there is no need to mess with Nginx proxies or whatnot.\n\n### Download and installation\nOn the Github page of Soft Serve there are [releases](https://github.com/charmbracelet/soft-serve/releases/) for a lot of different platforms. But you can also compile the software for source if you have go 1.16.1 installed. Once compiled, you just have to copy the binary `soft` in the folder you want (I put it in `/usr/local/bin/soft`) and it should work.\n\n### Systemd service\nFirst, I had to create a folder (`/srv/data/soft-serve`) where Soft Serve could store its configuration and the repositories. Once this was done, I wrote the following systemd service:\n```\n[Unit]\nDescription=Starts the soft-serve git server\nAfter=network.target\n\n[Service]\nType=simple\nUser=root\nGroup=root\nWorkingDirectory=/srv/data/soft-serve\nExecStart=/usr/local/bin/soft\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target\n```\n\nThe fields `WorkingDirectory` and `ExecStart` will change depending on where you stored the `soft` executable and where you want to store Soft Serve data.\n\nI stored the service file at the path `/etc/systemd/system/soft-serve.service`. Then I simply had to type `systemctl enable soft-serve && systemctl start soft-serve` to launch the server.\n\n### First configuration\nOnce the server is launched you can test it with the command `ssh localhost -p 23231`. You should be greeted by a tasteful TUI. Here, you can copy the command `git clone ssh://localhost:23231/config` which will be used to configure Soft Serve. Use this command to clone the configuration repository. In this repository, edit the file `config.yaml` configure the server.\n\nAs I want to open the git server to the world but only let me and a few other people edit the code in the repositories, there are multiple fields in the configuration I need to change.\n* host: As I want to log to the git server with an URL, I must change the host to match this URL. Thus, I set it to `git.bobignou.red`.\n* anon-access: As I want to only let a small set of users edit repositories but II also want to let anyone read them I set the field anon-access to `read-only`.\n* allow-keyless: This field must stay to false because I don't want anyone to be able to freely use the Git server.\n* users: To choose which users are allowed to edit the repositories, I must fill in the list of users, and copy-paste their public keys for them to be identified. Here is a dummy example of a dummy user:\n```\nusers:\n  - name: me\n    admin: true\n    public-keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDNtawiMooAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEGgl2I+ypjHnoGl9cZ6dr59zAgMFSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlbP7vRSaMYNzCcQ4TZOSEaqbgnAT0LAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzttUgAfXyX7yktWgo/2F6YLsGY/8CPhlM8WY5GvYeJrsHMl8aDYQQ8XyON1M5FN5PFX4g6G9D70HRIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADOh9bdJj3nbJ5Da9BxCTtkY7H me@mycomputer\n```\n\nThen I just have to do `git add config.yaml && got commit -m 'Config for public use' && git push origin master` and the configuration is uploaded.\n\n### Adding some flair\nAs of now, there is not much to customize the look and feel of the TUI. We can still edit the `name` field of `config.yaml` and the file `README.md` to change the title and the text of the _homepage_ of the TUI.\n\n## Usage\nOnce the setup is finished, most of the work is done. From here, the information on the project's GitHub `README.md` is enough to use the server but I still want to detail them.\n\n### Pushing a new repository on Soft Serve\nPushing a new repository on the server is trivial. On your local machine, simply do `git remote add <remote name> ssh://<server's URL>:<server's port>/<repo name>`. For example, to push the repository `reflet`, I typed `git remote add soft ssh://git.bobignou.red:23231/reflet` from the repository's folder on my local machine. Then, you can push the branch you want to the server.\n:w\n\n### Using the TUI\nTo browse the repositories on Soft Serve, the TUI is very convenient. By typing `ssh -p 23231 git.bobignou.red` I can easily see all the repository I pushed and their `README.md`. The command used to clone the repository is written in the right box which is really neat.\n\nIn the comments of the file `config.yaml` it is written that only the repositories listed in the configuration file are shown in the TUI. In the version of Soft Serve that I use (`0.1.0`) this is not the case, all the pushed repositories are displayed in the TUI.\n\n### Using the local repository\nOnce all of this is done, you can use the remote just as any other remote Git server such as GitHub, GitLab, or Gitolite.\n\n## Web interface\nBy default, Soft Serve only presents an SSH interface. It is a very nice SSH interface but it is a bit of a shame that there is no web interface. To fix this, I made [Soft Serve Monitor](https://github.com/Arkaeriit/Soft-Serve_Monitor). This is a Flask server that presents a web page with a list of all the repositories on the Soft Serve sever.\n\nI host the web interface under the URL [git.bobignou.red](https://git.bobignou.red).\n\n","source":"_posts/Git-server.md","raw":"---\ntitle: Git server\ndate: 2021-12-09 14:45:32\ntags:\n---\nI recently found a very nice Git server named [Soft Serve](https://github.com/charmbracelet/soft-serve). This software offers both a git server to store repositories and a nice TUI front-end to list the stored repositories.\n\nThis is quite a recent software so there is not a lot of documentation on how to install it. Thus, I want to talk here about how to configure and use it.\n\n![A tasteful TUI](soft-serve.png)\n\n## Setup\n\n### Port forwarding\nAs we want to access our Git server from the outside, the first step is to enable port forwarding. I have chosen to use the default port for Soft Serve which is 23231 so I enabled port forwarding for port 23231 of the internet to port 23231 of my machine on my LAN.\n\nSoft Serve uses SSH for communication with the external world so there is no need to mess with Nginx proxies or whatnot.\n\n### Download and installation\nOn the Github page of Soft Serve there are [releases](https://github.com/charmbracelet/soft-serve/releases/) for a lot of different platforms. But you can also compile the software for source if you have go 1.16.1 installed. Once compiled, you just have to copy the binary `soft` in the folder you want (I put it in `/usr/local/bin/soft`) and it should work.\n\n### Systemd service\nFirst, I had to create a folder (`/srv/data/soft-serve`) where Soft Serve could store its configuration and the repositories. Once this was done, I wrote the following systemd service:\n```\n[Unit]\nDescription=Starts the soft-serve git server\nAfter=network.target\n\n[Service]\nType=simple\nUser=root\nGroup=root\nWorkingDirectory=/srv/data/soft-serve\nExecStart=/usr/local/bin/soft\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target\n```\n\nThe fields `WorkingDirectory` and `ExecStart` will change depending on where you stored the `soft` executable and where you want to store Soft Serve data.\n\nI stored the service file at the path `/etc/systemd/system/soft-serve.service`. Then I simply had to type `systemctl enable soft-serve && systemctl start soft-serve` to launch the server.\n\n### First configuration\nOnce the server is launched you can test it with the command `ssh localhost -p 23231`. You should be greeted by a tasteful TUI. Here, you can copy the command `git clone ssh://localhost:23231/config` which will be used to configure Soft Serve. Use this command to clone the configuration repository. In this repository, edit the file `config.yaml` configure the server.\n\nAs I want to open the git server to the world but only let me and a few other people edit the code in the repositories, there are multiple fields in the configuration I need to change.\n* host: As I want to log to the git server with an URL, I must change the host to match this URL. Thus, I set it to `git.bobignou.red`.\n* anon-access: As I want to only let a small set of users edit repositories but II also want to let anyone read them I set the field anon-access to `read-only`.\n* allow-keyless: This field must stay to false because I don't want anyone to be able to freely use the Git server.\n* users: To choose which users are allowed to edit the repositories, I must fill in the list of users, and copy-paste their public keys for them to be identified. Here is a dummy example of a dummy user:\n```\nusers:\n  - name: me\n    admin: true\n    public-keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDNtawiMooAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEGgl2I+ypjHnoGl9cZ6dr59zAgMFSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlbP7vRSaMYNzCcQ4TZOSEaqbgnAT0LAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzttUgAfXyX7yktWgo/2F6YLsGY/8CPhlM8WY5GvYeJrsHMl8aDYQQ8XyON1M5FN5PFX4g6G9D70HRIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADOh9bdJj3nbJ5Da9BxCTtkY7H me@mycomputer\n```\n\nThen I just have to do `git add config.yaml && got commit -m 'Config for public use' && git push origin master` and the configuration is uploaded.\n\n### Adding some flair\nAs of now, there is not much to customize the look and feel of the TUI. We can still edit the `name` field of `config.yaml` and the file `README.md` to change the title and the text of the _homepage_ of the TUI.\n\n## Usage\nOnce the setup is finished, most of the work is done. From here, the information on the project's GitHub `README.md` is enough to use the server but I still want to detail them.\n\n### Pushing a new repository on Soft Serve\nPushing a new repository on the server is trivial. On your local machine, simply do `git remote add <remote name> ssh://<server's URL>:<server's port>/<repo name>`. For example, to push the repository `reflet`, I typed `git remote add soft ssh://git.bobignou.red:23231/reflet` from the repository's folder on my local machine. Then, you can push the branch you want to the server.\n:w\n\n### Using the TUI\nTo browse the repositories on Soft Serve, the TUI is very convenient. By typing `ssh -p 23231 git.bobignou.red` I can easily see all the repository I pushed and their `README.md`. The command used to clone the repository is written in the right box which is really neat.\n\nIn the comments of the file `config.yaml` it is written that only the repositories listed in the configuration file are shown in the TUI. In the version of Soft Serve that I use (`0.1.0`) this is not the case, all the pushed repositories are displayed in the TUI.\n\n### Using the local repository\nOnce all of this is done, you can use the remote just as any other remote Git server such as GitHub, GitLab, or Gitolite.\n\n## Web interface\nBy default, Soft Serve only presents an SSH interface. It is a very nice SSH interface but it is a bit of a shame that there is no web interface. To fix this, I made [Soft Serve Monitor](https://github.com/Arkaeriit/Soft-Serve_Monitor). This is a Flask server that presents a web page with a list of all the repositories on the Soft Serve sever.\n\nI host the web interface under the URL [git.bobignou.red](https://git.bobignou.red).\n\n","slug":"Git-server","published":1,"updated":"2022-01-08T19:39:59.035Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cky6f5ogy0003cflz2yre6ib0","content":"<p>I recently found a very nice Git server named <a href=\"https://github.com/charmbracelet/soft-serve\">Soft Serve</a>. This software offers both a git server to store repositories and a nice TUI front-end to list the stored repositories.</p>\n<p>This is quite a recent software so there is not a lot of documentation on how to install it. Thus, I want to talk here about how to configure and use it.</p>\n<p><img src=\"/2021/12/09/Git-server/soft-serve.png\" alt=\"A tasteful TUI\"></p>\n<h2 id=\"Setup\"><a href=\"#Setup\" class=\"headerlink\" title=\"Setup\"></a>Setup</h2><h3 id=\"Port-forwarding\"><a href=\"#Port-forwarding\" class=\"headerlink\" title=\"Port forwarding\"></a>Port forwarding</h3><p>As we want to access our Git server from the outside, the first step is to enable port forwarding. I have chosen to use the default port for Soft Serve which is 23231 so I enabled port forwarding for port 23231 of the internet to port 23231 of my machine on my LAN.</p>\n<p>Soft Serve uses SSH for communication with the external world so there is no need to mess with Nginx proxies or whatnot.</p>\n<h3 id=\"Download-and-installation\"><a href=\"#Download-and-installation\" class=\"headerlink\" title=\"Download and installation\"></a>Download and installation</h3><p>On the Github page of Soft Serve there are <a href=\"https://github.com/charmbracelet/soft-serve/releases/\">releases</a> for a lot of different platforms. But you can also compile the software for source if you have go 1.16.1 installed. Once compiled, you just have to copy the binary <code>soft</code> in the folder you want (I put it in <code>/usr/local/bin/soft</code>) and it should work.</p>\n<h3 id=\"Systemd-service\"><a href=\"#Systemd-service\" class=\"headerlink\" title=\"Systemd service\"></a>Systemd service</h3><p>First, I had to create a folder (<code>/srv/data/soft-serve</code>) where Soft Serve could store its configuration and the repositories. Once this was done, I wrote the following systemd service:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=Starts the soft-serve git server</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">User=root</span><br><span class=\"line\">Group=root</span><br><span class=\"line\">WorkingDirectory=/srv/data/soft-serve</span><br><span class=\"line\">ExecStart=/usr/local/bin/soft</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n\n<p>The fields <code>WorkingDirectory</code> and <code>ExecStart</code> will change depending on where you stored the <code>soft</code> executable and where you want to store Soft Serve data.</p>\n<p>I stored the service file at the path <code>/etc/systemd/system/soft-serve.service</code>. Then I simply had to type <code>systemctl enable soft-serve &amp;&amp; systemctl start soft-serve</code> to launch the server.</p>\n<h3 id=\"First-configuration\"><a href=\"#First-configuration\" class=\"headerlink\" title=\"First configuration\"></a>First configuration</h3><p>Once the server is launched you can test it with the command <code>ssh localhost -p 23231</code>. You should be greeted by a tasteful TUI. Here, you can copy the command <code>git clone ssh://localhost:23231/config</code> which will be used to configure Soft Serve. Use this command to clone the configuration repository. In this repository, edit the file <code>config.yaml</code> configure the server.</p>\n<p>As I want to open the git server to the world but only let me and a few other people edit the code in the repositories, there are multiple fields in the configuration I need to change.</p>\n<ul>\n<li>host: As I want to log to the git server with an URL, I must change the host to match this URL. Thus, I set it to <code>git.bobignou.red</code>.</li>\n<li>anon-access: As I want to only let a small set of users edit repositories but II also want to let anyone read them I set the field anon-access to <code>read-only</code>.</li>\n<li>allow-keyless: This field must stay to false because I don’t want anyone to be able to freely use the Git server.</li>\n<li>users: To choose which users are allowed to edit the repositories, I must fill in the list of users, and copy-paste their public keys for them to be identified. Here is a dummy example of a dummy user:<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">users:</span><br><span class=\"line\">  - name: me</span><br><span class=\"line\">    admin: true</span><br><span class=\"line\">    public-keys:</span><br><span class=\"line\">      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDNtawiMooAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEGgl2I+ypjHnoGl9cZ6dr59zAgMFSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlbP7vRSaMYNzCcQ4TZOSEaqbgnAT0LAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzttUgAfXyX7yktWgo/2F6YLsGY/8CPhlM8WY5GvYeJrsHMl8aDYQQ8XyON1M5FN5PFX4g6G9D70HRIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADOh9bdJj3nbJ5Da9BxCTtkY7H me@mycomputer</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>Then I just have to do <code>git add config.yaml &amp;&amp; got commit -m &#39;Config for public use&#39; &amp;&amp; git push origin master</code> and the configuration is uploaded.</p>\n<h3 id=\"Adding-some-flair\"><a href=\"#Adding-some-flair\" class=\"headerlink\" title=\"Adding some flair\"></a>Adding some flair</h3><p>As of now, there is not much to customize the look and feel of the TUI. We can still edit the <code>name</code> field of <code>config.yaml</code> and the file <code>README.md</code> to change the title and the text of the <em>homepage</em> of the TUI.</p>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><p>Once the setup is finished, most of the work is done. From here, the information on the project’s GitHub <code>README.md</code> is enough to use the server but I still want to detail them.</p>\n<h3 id=\"Pushing-a-new-repository-on-Soft-Serve\"><a href=\"#Pushing-a-new-repository-on-Soft-Serve\" class=\"headerlink\" title=\"Pushing a new repository on Soft Serve\"></a>Pushing a new repository on Soft Serve</h3><p>Pushing a new repository on the server is trivial. On your local machine, simply do <code>git remote add &lt;remote name&gt; ssh://&lt;server&#39;s URL&gt;:&lt;server&#39;s port&gt;/&lt;repo name&gt;</code>. For example, to push the repository <code>reflet</code>, I typed <code>git remote add soft ssh://git.bobignou.red:23231/reflet</code> from the repository’s folder on my local machine. Then, you can push the branch you want to the server.<br>:w</p>\n<h3 id=\"Using-the-TUI\"><a href=\"#Using-the-TUI\" class=\"headerlink\" title=\"Using the TUI\"></a>Using the TUI</h3><p>To browse the repositories on Soft Serve, the TUI is very convenient. By typing <code>ssh -p 23231 git.bobignou.red</code> I can easily see all the repository I pushed and their <code>README.md</code>. The command used to clone the repository is written in the right box which is really neat.</p>\n<p>In the comments of the file <code>config.yaml</code> it is written that only the repositories listed in the configuration file are shown in the TUI. In the version of Soft Serve that I use (<code>0.1.0</code>) this is not the case, all the pushed repositories are displayed in the TUI.</p>\n<h3 id=\"Using-the-local-repository\"><a href=\"#Using-the-local-repository\" class=\"headerlink\" title=\"Using the local repository\"></a>Using the local repository</h3><p>Once all of this is done, you can use the remote just as any other remote Git server such as GitHub, GitLab, or Gitolite.</p>\n<h2 id=\"Web-interface\"><a href=\"#Web-interface\" class=\"headerlink\" title=\"Web interface\"></a>Web interface</h2><p>By default, Soft Serve only presents an SSH interface. It is a very nice SSH interface but it is a bit of a shame that there is no web interface. To fix this, I made <a href=\"https://github.com/Arkaeriit/Soft-Serve_Monitor\">Soft Serve Monitor</a>. This is a Flask server that presents a web page with a list of all the repositories on the Soft Serve sever.</p>\n<p>I host the web interface under the URL <a href=\"https://git.bobignou.red/\">git.bobignou.red</a>.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>I recently found a very nice Git server named <a href=\"https://github.com/charmbracelet/soft-serve\">Soft Serve</a>. This software offers both a git server to store repositories and a nice TUI front-end to list the stored repositories.</p>\n<p>This is quite a recent software so there is not a lot of documentation on how to install it. Thus, I want to talk here about how to configure and use it.</p>\n<p><img src=\"/2021/12/09/Git-server/soft-serve.png\" alt=\"A tasteful TUI\"></p>\n<h2 id=\"Setup\"><a href=\"#Setup\" class=\"headerlink\" title=\"Setup\"></a>Setup</h2><h3 id=\"Port-forwarding\"><a href=\"#Port-forwarding\" class=\"headerlink\" title=\"Port forwarding\"></a>Port forwarding</h3><p>As we want to access our Git server from the outside, the first step is to enable port forwarding. I have chosen to use the default port for Soft Serve which is 23231 so I enabled port forwarding for port 23231 of the internet to port 23231 of my machine on my LAN.</p>\n<p>Soft Serve uses SSH for communication with the external world so there is no need to mess with Nginx proxies or whatnot.</p>\n<h3 id=\"Download-and-installation\"><a href=\"#Download-and-installation\" class=\"headerlink\" title=\"Download and installation\"></a>Download and installation</h3><p>On the Github page of Soft Serve there are <a href=\"https://github.com/charmbracelet/soft-serve/releases/\">releases</a> for a lot of different platforms. But you can also compile the software for source if you have go 1.16.1 installed. Once compiled, you just have to copy the binary <code>soft</code> in the folder you want (I put it in <code>/usr/local/bin/soft</code>) and it should work.</p>\n<h3 id=\"Systemd-service\"><a href=\"#Systemd-service\" class=\"headerlink\" title=\"Systemd service\"></a>Systemd service</h3><p>First, I had to create a folder (<code>/srv/data/soft-serve</code>) where Soft Serve could store its configuration and the repositories. Once this was done, I wrote the following systemd service:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=Starts the soft-serve git server</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">User=root</span><br><span class=\"line\">Group=root</span><br><span class=\"line\">WorkingDirectory=/srv/data/soft-serve</span><br><span class=\"line\">ExecStart=/usr/local/bin/soft</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n\n<p>The fields <code>WorkingDirectory</code> and <code>ExecStart</code> will change depending on where you stored the <code>soft</code> executable and where you want to store Soft Serve data.</p>\n<p>I stored the service file at the path <code>/etc/systemd/system/soft-serve.service</code>. Then I simply had to type <code>systemctl enable soft-serve &amp;&amp; systemctl start soft-serve</code> to launch the server.</p>\n<h3 id=\"First-configuration\"><a href=\"#First-configuration\" class=\"headerlink\" title=\"First configuration\"></a>First configuration</h3><p>Once the server is launched you can test it with the command <code>ssh localhost -p 23231</code>. You should be greeted by a tasteful TUI. Here, you can copy the command <code>git clone ssh://localhost:23231/config</code> which will be used to configure Soft Serve. Use this command to clone the configuration repository. In this repository, edit the file <code>config.yaml</code> configure the server.</p>\n<p>As I want to open the git server to the world but only let me and a few other people edit the code in the repositories, there are multiple fields in the configuration I need to change.</p>\n<ul>\n<li>host: As I want to log to the git server with an URL, I must change the host to match this URL. Thus, I set it to <code>git.bobignou.red</code>.</li>\n<li>anon-access: As I want to only let a small set of users edit repositories but II also want to let anyone read them I set the field anon-access to <code>read-only</code>.</li>\n<li>allow-keyless: This field must stay to false because I don’t want anyone to be able to freely use the Git server.</li>\n<li>users: To choose which users are allowed to edit the repositories, I must fill in the list of users, and copy-paste their public keys for them to be identified. Here is a dummy example of a dummy user:<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">users:</span><br><span class=\"line\">  - name: me</span><br><span class=\"line\">    admin: true</span><br><span class=\"line\">    public-keys:</span><br><span class=\"line\">      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDNtawiMooAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEGgl2I+ypjHnoGl9cZ6dr59zAgMFSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlbP7vRSaMYNzCcQ4TZOSEaqbgnAT0LAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzttUgAfXyX7yktWgo/2F6YLsGY/8CPhlM8WY5GvYeJrsHMl8aDYQQ8XyON1M5FN5PFX4g6G9D70HRIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADOh9bdJj3nbJ5Da9BxCTtkY7H me@mycomputer</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>Then I just have to do <code>git add config.yaml &amp;&amp; got commit -m &#39;Config for public use&#39; &amp;&amp; git push origin master</code> and the configuration is uploaded.</p>\n<h3 id=\"Adding-some-flair\"><a href=\"#Adding-some-flair\" class=\"headerlink\" title=\"Adding some flair\"></a>Adding some flair</h3><p>As of now, there is not much to customize the look and feel of the TUI. We can still edit the <code>name</code> field of <code>config.yaml</code> and the file <code>README.md</code> to change the title and the text of the <em>homepage</em> of the TUI.</p>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><p>Once the setup is finished, most of the work is done. From here, the information on the project’s GitHub <code>README.md</code> is enough to use the server but I still want to detail them.</p>\n<h3 id=\"Pushing-a-new-repository-on-Soft-Serve\"><a href=\"#Pushing-a-new-repository-on-Soft-Serve\" class=\"headerlink\" title=\"Pushing a new repository on Soft Serve\"></a>Pushing a new repository on Soft Serve</h3><p>Pushing a new repository on the server is trivial. On your local machine, simply do <code>git remote add &lt;remote name&gt; ssh://&lt;server&#39;s URL&gt;:&lt;server&#39;s port&gt;/&lt;repo name&gt;</code>. For example, to push the repository <code>reflet</code>, I typed <code>git remote add soft ssh://git.bobignou.red:23231/reflet</code> from the repository’s folder on my local machine. Then, you can push the branch you want to the server.<br>:w</p>\n<h3 id=\"Using-the-TUI\"><a href=\"#Using-the-TUI\" class=\"headerlink\" title=\"Using the TUI\"></a>Using the TUI</h3><p>To browse the repositories on Soft Serve, the TUI is very convenient. By typing <code>ssh -p 23231 git.bobignou.red</code> I can easily see all the repository I pushed and their <code>README.md</code>. The command used to clone the repository is written in the right box which is really neat.</p>\n<p>In the comments of the file <code>config.yaml</code> it is written that only the repositories listed in the configuration file are shown in the TUI. In the version of Soft Serve that I use (<code>0.1.0</code>) this is not the case, all the pushed repositories are displayed in the TUI.</p>\n<h3 id=\"Using-the-local-repository\"><a href=\"#Using-the-local-repository\" class=\"headerlink\" title=\"Using the local repository\"></a>Using the local repository</h3><p>Once all of this is done, you can use the remote just as any other remote Git server such as GitHub, GitLab, or Gitolite.</p>\n<h2 id=\"Web-interface\"><a href=\"#Web-interface\" class=\"headerlink\" title=\"Web interface\"></a>Web interface</h2><p>By default, Soft Serve only presents an SSH interface. It is a very nice SSH interface but it is a bit of a shame that there is no web interface. To fix this, I made <a href=\"https://github.com/Arkaeriit/Soft-Serve_Monitor\">Soft Serve Monitor</a>. This is a Flask server that presents a web page with a list of all the repositories on the Soft Serve sever.</p>\n<p>I host the web interface under the URL <a href=\"https://git.bobignou.red/\">git.bobignou.red</a>.</p>\n"},{"title":"Running this server","date":"2021-11-18T08:20:27.000Z","_content":"Multiples tools and components are used in this server to make it run and accessible from the internet. I want to describe them here to help me reconfigure a similar server in the future if needed. It might also be useful to anyone searching to run a similar web server themselves.\n\n## Domain name\nIn order to easily access the server for the outside, a domain name is very handy I purchased bobignou.red at [Namecheap](https://www.namecheap.com/). There is a lot of other alternatives but I am telling you that because I use some of their other services.\n\n## Dynamic DNS\nAs I don't have a static IP address, linking the domain name to my IP address is not trivial. I have to rely on dynamic DNS.\n\nTo do so, I use a combination of Namecheap's advanced DNS and DDclient.\n\n### Namecheap's advanced DNS\nOn the page to manage a domain name in the Namecheap website, there is an 'Advanced DNS' page. At the bottom of this page, there is a 'Dynamic DNS' category. Firstly, you should enable it with the little oval button. You are given a Dynamic DNS Password, write it down. Lastly, you must add a record for each subdomain you want to use. To do so, press the 'add new record' button. Under the 'Host' column, you can write the name of the subdomain (for example, `@` for `bobignou.red` or `www` for `www.bobignou.red`) and you should write a dummy IP in the 'Value' column.\n\n### DDclient\nOn the server, install DDclient. You configure it with the configuration file `/etc/ddclient.conf`. To configure a subdomain, write the following configuration:\n```\nuse=web, web=dynamicdns.park-your-domain.com/getip\nprotocol=namecheap\nserver=dynamicdns.park-your-domain.com\nlogin=<domain name>\npassword='<Dynamic DNS Password>'\n<Host>\n```\nWrite one of such configurations for each subdomain.\n\nThen, you can start dd client with systemd through the commands `systemctl enable ddclient` and `systemctl start ddclient`. You can check that it works well in two ways.\n* You can check the result of `systemctl status ddclient`.\n* You can verify that your IP has been added in the column 'Value' in Namecheap's advanced DNS.\n\n## SSL certificates\nIn order to use HTTPS, you need SSL certificates. Fortunately, a tool named certbot made by let's encrypt makes it really easy to get. You just need to install certbot that is probably in your distribution's repository. Before starting, you must make sure that using your domain name, one can reach your server (you must enable port forwarding in your router for ports 80 and 443) and that no program uses those ports on your server.\n\nThen you just have to type the command `certbot certonly --standalone -d <your first domain name> -d <your second domain name> ...` and follow the steps.\n\n## The Nginx webserver\nI use Nginx as the webserver. Each interface is in a `server` block. All those blocks are in a `http` block. I did not customize the `http` block, I kept the default one which work. The files for these blocks are in the folder `/srv/data/www/blog`. The layout of the file system is the same as the layout of the website.\n\n### Basic HTTP server\nOn port 80, I present the site in HTTP, under the domain name `bobignou.red`. The configuration is the following:\n```\nserver {\n        listen 80;\n        index index.html;\n        server_name         bobignou.red;\n\n        root /srv/data/www/blog;\n        location / {\n                try_files $uri $uri/ =404;\n        }\n}\n```\nThe configuration is extremely simple because the layout of the file system is the same as the one of the website.\n\n### HTTP proxy\nAs I also want to redirect `www.bobignou.red` to this website, I used a reverse proxy whose configuration is the following:\n```\nserver {\n        listen 80;\n        server_name         www.bobignou.red;\n\n        location / {\n                proxy_pass http://bobignou.red; \n        }\n}\n```\nOnce again, it is very simple.\n\n### HTTPS server\nAs we are in the 21st century, I wanted to also present an HTTPS server. Its configuration is the following:\n```\nserver {\n        listen              443 ssl;\n        server_name         bobignou.red;\n        ssl_certificate     /etc/letsencrypt/live/bobignou.red/fullchain.pem;\n        ssl_certificate_key /etc/letsencrypt/live/bobignou.red/privkey.pem;\n        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;\n        ssl_ciphers         HIGH:!aNULL:!MD5;\n        index index.html;\n\n        root /srv/data/www/blog;\n        location / {\n                try_files $uri $uri/ =404;\n        }\n}\n```\nThe configuration is very similar to the one in the HTTP server but there is a lot of extra info needed to enable SSL. It is still very easy to do.\n\n### HTTPS proxy\nTo acces `www.bobignou.red` with SSL, I used a reverse proxy that re-route the SSL-encripted trafic to the HTTP server at `bobignou.red`. Here is the configuration:\n```\nserver {\n        listen              443 ssl;\n        server_name         www.bobignou.red;\n        ssl_certificate     /etc/letsencrypt/live/bobignou.red/fullchain.pem;\n        ssl_certificate_key /etc/letsencrypt/live/bobignou.red/privkey.pem;\n        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;\n        ssl_ciphers         HIGH:!aNULL:!MD5;\n\n        location / {\n                proxy_pass http://bobignou.red:80;\n        }\n}\n```\n\n## Flask server\nOn this server, I also run `cyberland.bobignou.red` which is powered by Flask. Setting it up is a bit more tricky than the blog.\n\n### Making a service\nTo ensure the Cyberland server is always on, I want it to start when the computer starts. To do so, I wrote a simple systemd service file:\n```\n[Unit]\nDescription=Starts the cyberland server\nAfter=network.target\n\n[Service]\nType=simple\nUser=root\nGroup=root\nWorkingDirectory=/srv/data/www/cyberland\nExecStart=/srv/data/www/cyberland/cyberland.py\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target\n```\nI can then save it as `/etc/systemd/system/cyberland.service` and have it start with the computer thanks to the command `systemctl enable cyberland`.\n\n### Accessing it from the outside\nLinking the Flask server to the outside work is made with a Nginx reverse proxy. The configuration is the following:\n```\n# HTTP server for Cyberland\nserver {\n        listen 80;\n        server_name        cyberland.bobignou.red;\n\n        location / {\n                proxy_pass http://127.0.0.1:8901;\n        }\n}\n\n# HTTPS server for Cyberland\nserver {\n        listen              443 ssl;\n        server_name         cyberland.bobignou.red;\n        ssl_certificate     /etc/letsencrypt/live/bobignou.red/fullchain.pem;\n        ssl_certificate_key /etc/letsencrypt/live/bobignou.red/privkey.pem;\n        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;\n        ssl_ciphers         HIGH:!aNULL:!MD5;\n\n        location / {\n                proxy_pass http://127.0.0.1:8901;\n        }\n}\n```\nIt looks a lot like the configuration of the reverse proxy for the blog.\n\n## Website generation\nThe pages in this website are generated with [hexo](https://github.com/hexojs/hexo). I mostly used the default configuration by following the steps in the official documentation.\n\n","source":"_posts/Running-this-server.md","raw":"---\ntitle: Running this server\ndate: 2021-11-18 09:20:27\ntags:\n---\nMultiples tools and components are used in this server to make it run and accessible from the internet. I want to describe them here to help me reconfigure a similar server in the future if needed. It might also be useful to anyone searching to run a similar web server themselves.\n\n## Domain name\nIn order to easily access the server for the outside, a domain name is very handy I purchased bobignou.red at [Namecheap](https://www.namecheap.com/). There is a lot of other alternatives but I am telling you that because I use some of their other services.\n\n## Dynamic DNS\nAs I don't have a static IP address, linking the domain name to my IP address is not trivial. I have to rely on dynamic DNS.\n\nTo do so, I use a combination of Namecheap's advanced DNS and DDclient.\n\n### Namecheap's advanced DNS\nOn the page to manage a domain name in the Namecheap website, there is an 'Advanced DNS' page. At the bottom of this page, there is a 'Dynamic DNS' category. Firstly, you should enable it with the little oval button. You are given a Dynamic DNS Password, write it down. Lastly, you must add a record for each subdomain you want to use. To do so, press the 'add new record' button. Under the 'Host' column, you can write the name of the subdomain (for example, `@` for `bobignou.red` or `www` for `www.bobignou.red`) and you should write a dummy IP in the 'Value' column.\n\n### DDclient\nOn the server, install DDclient. You configure it with the configuration file `/etc/ddclient.conf`. To configure a subdomain, write the following configuration:\n```\nuse=web, web=dynamicdns.park-your-domain.com/getip\nprotocol=namecheap\nserver=dynamicdns.park-your-domain.com\nlogin=<domain name>\npassword='<Dynamic DNS Password>'\n<Host>\n```\nWrite one of such configurations for each subdomain.\n\nThen, you can start dd client with systemd through the commands `systemctl enable ddclient` and `systemctl start ddclient`. You can check that it works well in two ways.\n* You can check the result of `systemctl status ddclient`.\n* You can verify that your IP has been added in the column 'Value' in Namecheap's advanced DNS.\n\n## SSL certificates\nIn order to use HTTPS, you need SSL certificates. Fortunately, a tool named certbot made by let's encrypt makes it really easy to get. You just need to install certbot that is probably in your distribution's repository. Before starting, you must make sure that using your domain name, one can reach your server (you must enable port forwarding in your router for ports 80 and 443) and that no program uses those ports on your server.\n\nThen you just have to type the command `certbot certonly --standalone -d <your first domain name> -d <your second domain name> ...` and follow the steps.\n\n## The Nginx webserver\nI use Nginx as the webserver. Each interface is in a `server` block. All those blocks are in a `http` block. I did not customize the `http` block, I kept the default one which work. The files for these blocks are in the folder `/srv/data/www/blog`. The layout of the file system is the same as the layout of the website.\n\n### Basic HTTP server\nOn port 80, I present the site in HTTP, under the domain name `bobignou.red`. The configuration is the following:\n```\nserver {\n        listen 80;\n        index index.html;\n        server_name         bobignou.red;\n\n        root /srv/data/www/blog;\n        location / {\n                try_files $uri $uri/ =404;\n        }\n}\n```\nThe configuration is extremely simple because the layout of the file system is the same as the one of the website.\n\n### HTTP proxy\nAs I also want to redirect `www.bobignou.red` to this website, I used a reverse proxy whose configuration is the following:\n```\nserver {\n        listen 80;\n        server_name         www.bobignou.red;\n\n        location / {\n                proxy_pass http://bobignou.red; \n        }\n}\n```\nOnce again, it is very simple.\n\n### HTTPS server\nAs we are in the 21st century, I wanted to also present an HTTPS server. Its configuration is the following:\n```\nserver {\n        listen              443 ssl;\n        server_name         bobignou.red;\n        ssl_certificate     /etc/letsencrypt/live/bobignou.red/fullchain.pem;\n        ssl_certificate_key /etc/letsencrypt/live/bobignou.red/privkey.pem;\n        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;\n        ssl_ciphers         HIGH:!aNULL:!MD5;\n        index index.html;\n\n        root /srv/data/www/blog;\n        location / {\n                try_files $uri $uri/ =404;\n        }\n}\n```\nThe configuration is very similar to the one in the HTTP server but there is a lot of extra info needed to enable SSL. It is still very easy to do.\n\n### HTTPS proxy\nTo acces `www.bobignou.red` with SSL, I used a reverse proxy that re-route the SSL-encripted trafic to the HTTP server at `bobignou.red`. Here is the configuration:\n```\nserver {\n        listen              443 ssl;\n        server_name         www.bobignou.red;\n        ssl_certificate     /etc/letsencrypt/live/bobignou.red/fullchain.pem;\n        ssl_certificate_key /etc/letsencrypt/live/bobignou.red/privkey.pem;\n        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;\n        ssl_ciphers         HIGH:!aNULL:!MD5;\n\n        location / {\n                proxy_pass http://bobignou.red:80;\n        }\n}\n```\n\n## Flask server\nOn this server, I also run `cyberland.bobignou.red` which is powered by Flask. Setting it up is a bit more tricky than the blog.\n\n### Making a service\nTo ensure the Cyberland server is always on, I want it to start when the computer starts. To do so, I wrote a simple systemd service file:\n```\n[Unit]\nDescription=Starts the cyberland server\nAfter=network.target\n\n[Service]\nType=simple\nUser=root\nGroup=root\nWorkingDirectory=/srv/data/www/cyberland\nExecStart=/srv/data/www/cyberland/cyberland.py\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target\n```\nI can then save it as `/etc/systemd/system/cyberland.service` and have it start with the computer thanks to the command `systemctl enable cyberland`.\n\n### Accessing it from the outside\nLinking the Flask server to the outside work is made with a Nginx reverse proxy. The configuration is the following:\n```\n# HTTP server for Cyberland\nserver {\n        listen 80;\n        server_name        cyberland.bobignou.red;\n\n        location / {\n                proxy_pass http://127.0.0.1:8901;\n        }\n}\n\n# HTTPS server for Cyberland\nserver {\n        listen              443 ssl;\n        server_name         cyberland.bobignou.red;\n        ssl_certificate     /etc/letsencrypt/live/bobignou.red/fullchain.pem;\n        ssl_certificate_key /etc/letsencrypt/live/bobignou.red/privkey.pem;\n        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;\n        ssl_ciphers         HIGH:!aNULL:!MD5;\n\n        location / {\n                proxy_pass http://127.0.0.1:8901;\n        }\n}\n```\nIt looks a lot like the configuration of the reverse proxy for the blog.\n\n## Website generation\nThe pages in this website are generated with [hexo](https://github.com/hexojs/hexo). I mostly used the default configuration by following the steps in the official documentation.\n\n","slug":"Running-this-server","published":1,"updated":"2022-01-08T16:48:05.562Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cky6f5ohb0004cflz802l8lfk","content":"<p>Multiples tools and components are used in this server to make it run and accessible from the internet. I want to describe them here to help me reconfigure a similar server in the future if needed. It might also be useful to anyone searching to run a similar web server themselves.</p>\n<h2 id=\"Domain-name\"><a href=\"#Domain-name\" class=\"headerlink\" title=\"Domain name\"></a>Domain name</h2><p>In order to easily access the server for the outside, a domain name is very handy I purchased bobignou.red at <a href=\"https://www.namecheap.com/\">Namecheap</a>. There is a lot of other alternatives but I am telling you that because I use some of their other services.</p>\n<h2 id=\"Dynamic-DNS\"><a href=\"#Dynamic-DNS\" class=\"headerlink\" title=\"Dynamic DNS\"></a>Dynamic DNS</h2><p>As I don’t have a static IP address, linking the domain name to my IP address is not trivial. I have to rely on dynamic DNS.</p>\n<p>To do so, I use a combination of Namecheap’s advanced DNS and DDclient.</p>\n<h3 id=\"Namecheap’s-advanced-DNS\"><a href=\"#Namecheap’s-advanced-DNS\" class=\"headerlink\" title=\"Namecheap’s advanced DNS\"></a>Namecheap’s advanced DNS</h3><p>On the page to manage a domain name in the Namecheap website, there is an ‘Advanced DNS’ page. At the bottom of this page, there is a ‘Dynamic DNS’ category. Firstly, you should enable it with the little oval button. You are given a Dynamic DNS Password, write it down. Lastly, you must add a record for each subdomain you want to use. To do so, press the ‘add new record’ button. Under the ‘Host’ column, you can write the name of the subdomain (for example, <code>@</code> for <code>bobignou.red</code> or <code>www</code> for <code>www.bobignou.red</code>) and you should write a dummy IP in the ‘Value’ column.</p>\n<h3 id=\"DDclient\"><a href=\"#DDclient\" class=\"headerlink\" title=\"DDclient\"></a>DDclient</h3><p>On the server, install DDclient. You configure it with the configuration file <code>/etc/ddclient.conf</code>. To configure a subdomain, write the following configuration:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use=web, web=dynamicdns.park-your-domain.com/getip</span><br><span class=\"line\">protocol=namecheap</span><br><span class=\"line\">server=dynamicdns.park-your-domain.com</span><br><span class=\"line\">login=&lt;domain name&gt;</span><br><span class=\"line\">password=&#x27;&lt;Dynamic DNS Password&gt;&#x27;</span><br><span class=\"line\">&lt;Host&gt;</span><br></pre></td></tr></table></figure>\n<p>Write one of such configurations for each subdomain.</p>\n<p>Then, you can start dd client with systemd through the commands <code>systemctl enable ddclient</code> and <code>systemctl start ddclient</code>. You can check that it works well in two ways.</p>\n<ul>\n<li>You can check the result of <code>systemctl status ddclient</code>.</li>\n<li>You can verify that your IP has been added in the column ‘Value’ in Namecheap’s advanced DNS.</li>\n</ul>\n<h2 id=\"SSL-certificates\"><a href=\"#SSL-certificates\" class=\"headerlink\" title=\"SSL certificates\"></a>SSL certificates</h2><p>In order to use HTTPS, you need SSL certificates. Fortunately, a tool named certbot made by let’s encrypt makes it really easy to get. You just need to install certbot that is probably in your distribution’s repository. Before starting, you must make sure that using your domain name, one can reach your server (you must enable port forwarding in your router for ports 80 and 443) and that no program uses those ports on your server.</p>\n<p>Then you just have to type the command <code>certbot certonly --standalone -d &lt;your first domain name&gt; -d &lt;your second domain name&gt; ...</code> and follow the steps.</p>\n<h2 id=\"The-Nginx-webserver\"><a href=\"#The-Nginx-webserver\" class=\"headerlink\" title=\"The Nginx webserver\"></a>The Nginx webserver</h2><p>I use Nginx as the webserver. Each interface is in a <code>server</code> block. All those blocks are in a <code>http</code> block. I did not customize the <code>http</code> block, I kept the default one which work. The files for these blocks are in the folder <code>/srv/data/www/blog</code>. The layout of the file system is the same as the layout of the website.</p>\n<h3 id=\"Basic-HTTP-server\"><a href=\"#Basic-HTTP-server\" class=\"headerlink\" title=\"Basic HTTP server\"></a>Basic HTTP server</h3><p>On port 80, I present the site in HTTP, under the domain name <code>bobignou.red</code>. The configuration is the following:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen 80;</span><br><span class=\"line\">        index index.html;</span><br><span class=\"line\">        server_name         bobignou.red;</span><br><span class=\"line\"></span><br><span class=\"line\">        root /srv/data/www/blog;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">                try_files $uri $uri/ =404;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>The configuration is extremely simple because the layout of the file system is the same as the one of the website.</p>\n<h3 id=\"HTTP-proxy\"><a href=\"#HTTP-proxy\" class=\"headerlink\" title=\"HTTP proxy\"></a>HTTP proxy</h3><p>As I also want to redirect <code>www.bobignou.red</code> to this website, I used a reverse proxy whose configuration is the following:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen 80;</span><br><span class=\"line\">        server_name         www.bobignou.red;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">                proxy_pass http://bobignou.red; </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Once again, it is very simple.</p>\n<h3 id=\"HTTPS-server\"><a href=\"#HTTPS-server\" class=\"headerlink\" title=\"HTTPS server\"></a>HTTPS server</h3><p>As we are in the 21st century, I wanted to also present an HTTPS server. Its configuration is the following:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen              443 ssl;</span><br><span class=\"line\">        server_name         bobignou.red;</span><br><span class=\"line\">        ssl_certificate     /etc/letsencrypt/live/bobignou.red/fullchain.pem;</span><br><span class=\"line\">        ssl_certificate_key /etc/letsencrypt/live/bobignou.red/privkey.pem;</span><br><span class=\"line\">        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;</span><br><span class=\"line\">        ssl_ciphers         HIGH:!aNULL:!MD5;</span><br><span class=\"line\">        index index.html;</span><br><span class=\"line\"></span><br><span class=\"line\">        root /srv/data/www/blog;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">                try_files $uri $uri/ =404;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>The configuration is very similar to the one in the HTTP server but there is a lot of extra info needed to enable SSL. It is still very easy to do.</p>\n<h3 id=\"HTTPS-proxy\"><a href=\"#HTTPS-proxy\" class=\"headerlink\" title=\"HTTPS proxy\"></a>HTTPS proxy</h3><p>To acces <code>www.bobignou.red</code> with SSL, I used a reverse proxy that re-route the SSL-encripted trafic to the HTTP server at <code>bobignou.red</code>. Here is the configuration:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen              443 ssl;</span><br><span class=\"line\">        server_name         www.bobignou.red;</span><br><span class=\"line\">        ssl_certificate     /etc/letsencrypt/live/bobignou.red/fullchain.pem;</span><br><span class=\"line\">        ssl_certificate_key /etc/letsencrypt/live/bobignou.red/privkey.pem;</span><br><span class=\"line\">        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;</span><br><span class=\"line\">        ssl_ciphers         HIGH:!aNULL:!MD5;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">                proxy_pass http://bobignou.red:80;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Flask-server\"><a href=\"#Flask-server\" class=\"headerlink\" title=\"Flask server\"></a>Flask server</h2><p>On this server, I also run <code>cyberland.bobignou.red</code> which is powered by Flask. Setting it up is a bit more tricky than the blog.</p>\n<h3 id=\"Making-a-service\"><a href=\"#Making-a-service\" class=\"headerlink\" title=\"Making a service\"></a>Making a service</h3><p>To ensure the Cyberland server is always on, I want it to start when the computer starts. To do so, I wrote a simple systemd service file:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=Starts the cyberland server</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">User=root</span><br><span class=\"line\">Group=root</span><br><span class=\"line\">WorkingDirectory=/srv/data/www/cyberland</span><br><span class=\"line\">ExecStart=/srv/data/www/cyberland/cyberland.py</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n<p>I can then save it as <code>/etc/systemd/system/cyberland.service</code> and have it start with the computer thanks to the command <code>systemctl enable cyberland</code>.</p>\n<h3 id=\"Accessing-it-from-the-outside\"><a href=\"#Accessing-it-from-the-outside\" class=\"headerlink\" title=\"Accessing it from the outside\"></a>Accessing it from the outside</h3><p>Linking the Flask server to the outside work is made with a Nginx reverse proxy. The configuration is the following:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># HTTP server for Cyberland</span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen 80;</span><br><span class=\"line\">        server_name        cyberland.bobignou.red;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">                proxy_pass http://127.0.0.1:8901;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># HTTPS server for Cyberland</span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen              443 ssl;</span><br><span class=\"line\">        server_name         cyberland.bobignou.red;</span><br><span class=\"line\">        ssl_certificate     /etc/letsencrypt/live/bobignou.red/fullchain.pem;</span><br><span class=\"line\">        ssl_certificate_key /etc/letsencrypt/live/bobignou.red/privkey.pem;</span><br><span class=\"line\">        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;</span><br><span class=\"line\">        ssl_ciphers         HIGH:!aNULL:!MD5;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">                proxy_pass http://127.0.0.1:8901;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>It looks a lot like the configuration of the reverse proxy for the blog.</p>\n<h2 id=\"Website-generation\"><a href=\"#Website-generation\" class=\"headerlink\" title=\"Website generation\"></a>Website generation</h2><p>The pages in this website are generated with <a href=\"https://github.com/hexojs/hexo\">hexo</a>. I mostly used the default configuration by following the steps in the official documentation.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Multiples tools and components are used in this server to make it run and accessible from the internet. I want to describe them here to help me reconfigure a similar server in the future if needed. It might also be useful to anyone searching to run a similar web server themselves.</p>\n<h2 id=\"Domain-name\"><a href=\"#Domain-name\" class=\"headerlink\" title=\"Domain name\"></a>Domain name</h2><p>In order to easily access the server for the outside, a domain name is very handy I purchased bobignou.red at <a href=\"https://www.namecheap.com/\">Namecheap</a>. There is a lot of other alternatives but I am telling you that because I use some of their other services.</p>\n<h2 id=\"Dynamic-DNS\"><a href=\"#Dynamic-DNS\" class=\"headerlink\" title=\"Dynamic DNS\"></a>Dynamic DNS</h2><p>As I don’t have a static IP address, linking the domain name to my IP address is not trivial. I have to rely on dynamic DNS.</p>\n<p>To do so, I use a combination of Namecheap’s advanced DNS and DDclient.</p>\n<h3 id=\"Namecheap’s-advanced-DNS\"><a href=\"#Namecheap’s-advanced-DNS\" class=\"headerlink\" title=\"Namecheap’s advanced DNS\"></a>Namecheap’s advanced DNS</h3><p>On the page to manage a domain name in the Namecheap website, there is an ‘Advanced DNS’ page. At the bottom of this page, there is a ‘Dynamic DNS’ category. Firstly, you should enable it with the little oval button. You are given a Dynamic DNS Password, write it down. Lastly, you must add a record for each subdomain you want to use. To do so, press the ‘add new record’ button. Under the ‘Host’ column, you can write the name of the subdomain (for example, <code>@</code> for <code>bobignou.red</code> or <code>www</code> for <code>www.bobignou.red</code>) and you should write a dummy IP in the ‘Value’ column.</p>\n<h3 id=\"DDclient\"><a href=\"#DDclient\" class=\"headerlink\" title=\"DDclient\"></a>DDclient</h3><p>On the server, install DDclient. You configure it with the configuration file <code>/etc/ddclient.conf</code>. To configure a subdomain, write the following configuration:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use=web, web=dynamicdns.park-your-domain.com/getip</span><br><span class=\"line\">protocol=namecheap</span><br><span class=\"line\">server=dynamicdns.park-your-domain.com</span><br><span class=\"line\">login=&lt;domain name&gt;</span><br><span class=\"line\">password=&#x27;&lt;Dynamic DNS Password&gt;&#x27;</span><br><span class=\"line\">&lt;Host&gt;</span><br></pre></td></tr></table></figure>\n<p>Write one of such configurations for each subdomain.</p>\n<p>Then, you can start dd client with systemd through the commands <code>systemctl enable ddclient</code> and <code>systemctl start ddclient</code>. You can check that it works well in two ways.</p>\n<ul>\n<li>You can check the result of <code>systemctl status ddclient</code>.</li>\n<li>You can verify that your IP has been added in the column ‘Value’ in Namecheap’s advanced DNS.</li>\n</ul>\n<h2 id=\"SSL-certificates\"><a href=\"#SSL-certificates\" class=\"headerlink\" title=\"SSL certificates\"></a>SSL certificates</h2><p>In order to use HTTPS, you need SSL certificates. Fortunately, a tool named certbot made by let’s encrypt makes it really easy to get. You just need to install certbot that is probably in your distribution’s repository. Before starting, you must make sure that using your domain name, one can reach your server (you must enable port forwarding in your router for ports 80 and 443) and that no program uses those ports on your server.</p>\n<p>Then you just have to type the command <code>certbot certonly --standalone -d &lt;your first domain name&gt; -d &lt;your second domain name&gt; ...</code> and follow the steps.</p>\n<h2 id=\"The-Nginx-webserver\"><a href=\"#The-Nginx-webserver\" class=\"headerlink\" title=\"The Nginx webserver\"></a>The Nginx webserver</h2><p>I use Nginx as the webserver. Each interface is in a <code>server</code> block. All those blocks are in a <code>http</code> block. I did not customize the <code>http</code> block, I kept the default one which work. The files for these blocks are in the folder <code>/srv/data/www/blog</code>. The layout of the file system is the same as the layout of the website.</p>\n<h3 id=\"Basic-HTTP-server\"><a href=\"#Basic-HTTP-server\" class=\"headerlink\" title=\"Basic HTTP server\"></a>Basic HTTP server</h3><p>On port 80, I present the site in HTTP, under the domain name <code>bobignou.red</code>. The configuration is the following:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen 80;</span><br><span class=\"line\">        index index.html;</span><br><span class=\"line\">        server_name         bobignou.red;</span><br><span class=\"line\"></span><br><span class=\"line\">        root /srv/data/www/blog;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">                try_files $uri $uri/ =404;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>The configuration is extremely simple because the layout of the file system is the same as the one of the website.</p>\n<h3 id=\"HTTP-proxy\"><a href=\"#HTTP-proxy\" class=\"headerlink\" title=\"HTTP proxy\"></a>HTTP proxy</h3><p>As I also want to redirect <code>www.bobignou.red</code> to this website, I used a reverse proxy whose configuration is the following:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen 80;</span><br><span class=\"line\">        server_name         www.bobignou.red;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">                proxy_pass http://bobignou.red; </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Once again, it is very simple.</p>\n<h3 id=\"HTTPS-server\"><a href=\"#HTTPS-server\" class=\"headerlink\" title=\"HTTPS server\"></a>HTTPS server</h3><p>As we are in the 21st century, I wanted to also present an HTTPS server. Its configuration is the following:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen              443 ssl;</span><br><span class=\"line\">        server_name         bobignou.red;</span><br><span class=\"line\">        ssl_certificate     /etc/letsencrypt/live/bobignou.red/fullchain.pem;</span><br><span class=\"line\">        ssl_certificate_key /etc/letsencrypt/live/bobignou.red/privkey.pem;</span><br><span class=\"line\">        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;</span><br><span class=\"line\">        ssl_ciphers         HIGH:!aNULL:!MD5;</span><br><span class=\"line\">        index index.html;</span><br><span class=\"line\"></span><br><span class=\"line\">        root /srv/data/www/blog;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">                try_files $uri $uri/ =404;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>The configuration is very similar to the one in the HTTP server but there is a lot of extra info needed to enable SSL. It is still very easy to do.</p>\n<h3 id=\"HTTPS-proxy\"><a href=\"#HTTPS-proxy\" class=\"headerlink\" title=\"HTTPS proxy\"></a>HTTPS proxy</h3><p>To acces <code>www.bobignou.red</code> with SSL, I used a reverse proxy that re-route the SSL-encripted trafic to the HTTP server at <code>bobignou.red</code>. Here is the configuration:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen              443 ssl;</span><br><span class=\"line\">        server_name         www.bobignou.red;</span><br><span class=\"line\">        ssl_certificate     /etc/letsencrypt/live/bobignou.red/fullchain.pem;</span><br><span class=\"line\">        ssl_certificate_key /etc/letsencrypt/live/bobignou.red/privkey.pem;</span><br><span class=\"line\">        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;</span><br><span class=\"line\">        ssl_ciphers         HIGH:!aNULL:!MD5;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">                proxy_pass http://bobignou.red:80;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Flask-server\"><a href=\"#Flask-server\" class=\"headerlink\" title=\"Flask server\"></a>Flask server</h2><p>On this server, I also run <code>cyberland.bobignou.red</code> which is powered by Flask. Setting it up is a bit more tricky than the blog.</p>\n<h3 id=\"Making-a-service\"><a href=\"#Making-a-service\" class=\"headerlink\" title=\"Making a service\"></a>Making a service</h3><p>To ensure the Cyberland server is always on, I want it to start when the computer starts. To do so, I wrote a simple systemd service file:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=Starts the cyberland server</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">User=root</span><br><span class=\"line\">Group=root</span><br><span class=\"line\">WorkingDirectory=/srv/data/www/cyberland</span><br><span class=\"line\">ExecStart=/srv/data/www/cyberland/cyberland.py</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n<p>I can then save it as <code>/etc/systemd/system/cyberland.service</code> and have it start with the computer thanks to the command <code>systemctl enable cyberland</code>.</p>\n<h3 id=\"Accessing-it-from-the-outside\"><a href=\"#Accessing-it-from-the-outside\" class=\"headerlink\" title=\"Accessing it from the outside\"></a>Accessing it from the outside</h3><p>Linking the Flask server to the outside work is made with a Nginx reverse proxy. The configuration is the following:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># HTTP server for Cyberland</span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen 80;</span><br><span class=\"line\">        server_name        cyberland.bobignou.red;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">                proxy_pass http://127.0.0.1:8901;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># HTTPS server for Cyberland</span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen              443 ssl;</span><br><span class=\"line\">        server_name         cyberland.bobignou.red;</span><br><span class=\"line\">        ssl_certificate     /etc/letsencrypt/live/bobignou.red/fullchain.pem;</span><br><span class=\"line\">        ssl_certificate_key /etc/letsencrypt/live/bobignou.red/privkey.pem;</span><br><span class=\"line\">        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;</span><br><span class=\"line\">        ssl_ciphers         HIGH:!aNULL:!MD5;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">                proxy_pass http://127.0.0.1:8901;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>It looks a lot like the configuration of the reverse proxy for the blog.</p>\n<h2 id=\"Website-generation\"><a href=\"#Website-generation\" class=\"headerlink\" title=\"Website generation\"></a>Website generation</h2><p>The pages in this website are generated with <a href=\"https://github.com/hexojs/hexo\">hexo</a>. I mostly used the default configuration by following the steps in the official documentation.</p>\n"},{"title":"Prime numbers","date":"2021-11-01T19:07:58.000Z","_content":"\nAlgorithms made to find primes numbers are a good way to try out a new programming language. I include here some lists of numbers to compare the output of your programs.\n\n## Downloadable lists\n\nHere are multiples files with a decent number of prime numbers in them.\nHere are multiple files with a decent number of prime numbers in them.\n* [First 1 000 000 primes numbers](/big_files/1000000_primes)\n* [First 10 000 000 primes numbers](/big_files/10000000_primes)\n* [First 100 000 000 primes numbers](/big_files/100000000_primes)\n\n## List of the first 1000 primes numbers\n\nFor the sake of convenience, you can find below a list of the first 1000 primes numbers.\n\n* 2\n* 3\n* 5\n* 7\n* 11\n* 13\n* 17\n* 19\n* 23\n* 29\n* 31\n* 37\n* 41\n* 43\n* 47\n* 53\n* 59\n* 61\n* 67\n* 71\n* 73\n* 79\n* 83\n* 89\n* 97\n* 101\n* 103\n* 107\n* 109\n* 113\n* 127\n* 131\n* 137\n* 139\n* 149\n* 151\n* 157\n* 163\n* 167\n* 173\n* 179\n* 181\n* 191\n* 193\n* 197\n* 199\n* 211\n* 223\n* 227\n* 229\n* 233\n* 239\n* 241\n* 251\n* 257\n* 263\n* 269\n* 271\n* 277\n* 281\n* 283\n* 293\n* 307\n* 311\n* 313\n* 317\n* 331\n* 337\n* 347\n* 349\n* 353\n* 359\n* 367\n* 373\n* 379\n* 383\n* 389\n* 397\n* 401\n* 409\n* 419\n* 421\n* 431\n* 433\n* 439\n* 443\n* 449\n* 457\n* 461\n* 463\n* 467\n* 479\n* 487\n* 491\n* 499\n* 503\n* 509\n* 521\n* 523\n* 541\n* 547\n* 557\n* 563\n* 569\n* 571\n* 577\n* 587\n* 593\n* 599\n* 601\n* 607\n* 613\n* 617\n* 619\n* 631\n* 641\n* 643\n* 647\n* 653\n* 659\n* 661\n* 673\n* 677\n* 683\n* 691\n* 701\n* 709\n* 719\n* 727\n* 733\n* 739\n* 743\n* 751\n* 757\n* 761\n* 769\n* 773\n* 787\n* 797\n* 809\n* 811\n* 821\n* 823\n* 827\n* 829\n* 839\n* 853\n* 857\n* 859\n* 863\n* 877\n* 881\n* 883\n* 887\n* 907\n* 911\n* 919\n* 929\n* 937\n* 941\n* 947\n* 953\n* 967\n* 971\n* 977\n* 983\n* 991\n* 997\n* 1009\n* 1013\n* 1019\n* 1021\n* 1031\n* 1033\n* 1039\n* 1049\n* 1051\n* 1061\n* 1063\n* 1069\n* 1087\n* 1091\n* 1093\n* 1097\n* 1103\n* 1109\n* 1117\n* 1123\n* 1129\n* 1151\n* 1153\n* 1163\n* 1171\n* 1181\n* 1187\n* 1193\n* 1201\n* 1213\n* 1217\n* 1223\n* 1229\n* 1231\n* 1237\n* 1249\n* 1259\n* 1277\n* 1279\n* 1283\n* 1289\n* 1291\n* 1297\n* 1301\n* 1303\n* 1307\n* 1319\n* 1321\n* 1327\n* 1361\n* 1367\n* 1373\n* 1381\n* 1399\n* 1409\n* 1423\n* 1427\n* 1429\n* 1433\n* 1439\n* 1447\n* 1451\n* 1453\n* 1459\n* 1471\n* 1481\n* 1483\n* 1487\n* 1489\n* 1493\n* 1499\n* 1511\n* 1523\n* 1531\n* 1543\n* 1549\n* 1553\n* 1559\n* 1567\n* 1571\n* 1579\n* 1583\n* 1597\n* 1601\n* 1607\n* 1609\n* 1613\n* 1619\n* 1621\n* 1627\n* 1637\n* 1657\n* 1663\n* 1667\n* 1669\n* 1693\n* 1697\n* 1699\n* 1709\n* 1721\n* 1723\n* 1733\n* 1741\n* 1747\n* 1753\n* 1759\n* 1777\n* 1783\n* 1787\n* 1789\n* 1801\n* 1811\n* 1823\n* 1831\n* 1847\n* 1861\n* 1867\n* 1871\n* 1873\n* 1877\n* 1879\n* 1889\n* 1901\n* 1907\n* 1913\n* 1931\n* 1933\n* 1949\n* 1951\n* 1973\n* 1979\n* 1987\n* 1993\n* 1997\n* 1999\n* 2003\n* 2011\n* 2017\n* 2027\n* 2029\n* 2039\n* 2053\n* 2063\n* 2069\n* 2081\n* 2083\n* 2087\n* 2089\n* 2099\n* 2111\n* 2113\n* 2129\n* 2131\n* 2137\n* 2141\n* 2143\n* 2153\n* 2161\n* 2179\n* 2203\n* 2207\n* 2213\n* 2221\n* 2237\n* 2239\n* 2243\n* 2251\n* 2267\n* 2269\n* 2273\n* 2281\n* 2287\n* 2293\n* 2297\n* 2309\n* 2311\n* 2333\n* 2339\n* 2341\n* 2347\n* 2351\n* 2357\n* 2371\n* 2377\n* 2381\n* 2383\n* 2389\n* 2393\n* 2399\n* 2411\n* 2417\n* 2423\n* 2437\n* 2441\n* 2447\n* 2459\n* 2467\n* 2473\n* 2477\n* 2503\n* 2521\n* 2531\n* 2539\n* 2543\n* 2549\n* 2551\n* 2557\n* 2579\n* 2591\n* 2593\n* 2609\n* 2617\n* 2621\n* 2633\n* 2647\n* 2657\n* 2659\n* 2663\n* 2671\n* 2677\n* 2683\n* 2687\n* 2689\n* 2693\n* 2699\n* 2707\n* 2711\n* 2713\n* 2719\n* 2729\n* 2731\n* 2741\n* 2749\n* 2753\n* 2767\n* 2777\n* 2789\n* 2791\n* 2797\n* 2801\n* 2803\n* 2819\n* 2833\n* 2837\n* 2843\n* 2851\n* 2857\n* 2861\n* 2879\n* 2887\n* 2897\n* 2903\n* 2909\n* 2917\n* 2927\n* 2939\n* 2953\n* 2957\n* 2963\n* 2969\n* 2971\n* 2999\n* 3001\n* 3011\n* 3019\n* 3023\n* 3037\n* 3041\n* 3049\n* 3061\n* 3067\n* 3079\n* 3083\n* 3089\n* 3109\n* 3119\n* 3121\n* 3137\n* 3163\n* 3167\n* 3169\n* 3181\n* 3187\n* 3191\n* 3203\n* 3209\n* 3217\n* 3221\n* 3229\n* 3251\n* 3253\n* 3257\n* 3259\n* 3271\n* 3299\n* 3301\n* 3307\n* 3313\n* 3319\n* 3323\n* 3329\n* 3331\n* 3343\n* 3347\n* 3359\n* 3361\n* 3371\n* 3373\n* 3389\n* 3391\n* 3407\n* 3413\n* 3433\n* 3449\n* 3457\n* 3461\n* 3463\n* 3467\n* 3469\n* 3491\n* 3499\n* 3511\n* 3517\n* 3527\n* 3529\n* 3533\n* 3539\n* 3541\n* 3547\n* 3557\n* 3559\n* 3571\n* 3581\n* 3583\n* 3593\n* 3607\n* 3613\n* 3617\n* 3623\n* 3631\n* 3637\n* 3643\n* 3659\n* 3671\n* 3673\n* 3677\n* 3691\n* 3697\n* 3701\n* 3709\n* 3719\n* 3727\n* 3733\n* 3739\n* 3761\n* 3767\n* 3769\n* 3779\n* 3793\n* 3797\n* 3803\n* 3821\n* 3823\n* 3833\n* 3847\n* 3851\n* 3853\n* 3863\n* 3877\n* 3881\n* 3889\n* 3907\n* 3911\n* 3917\n* 3919\n* 3923\n* 3929\n* 3931\n* 3943\n* 3947\n* 3967\n* 3989\n* 4001\n* 4003\n* 4007\n* 4013\n* 4019\n* 4021\n* 4027\n* 4049\n* 4051\n* 4057\n* 4073\n* 4079\n* 4091\n* 4093\n* 4099\n* 4111\n* 4127\n* 4129\n* 4133\n* 4139\n* 4153\n* 4157\n* 4159\n* 4177\n* 4201\n* 4211\n* 4217\n* 4219\n* 4229\n* 4231\n* 4241\n* 4243\n* 4253\n* 4259\n* 4261\n* 4271\n* 4273\n* 4283\n* 4289\n* 4297\n* 4327\n* 4337\n* 4339\n* 4349\n* 4357\n* 4363\n* 4373\n* 4391\n* 4397\n* 4409\n* 4421\n* 4423\n* 4441\n* 4447\n* 4451\n* 4457\n* 4463\n* 4481\n* 4483\n* 4493\n* 4507\n* 4513\n* 4517\n* 4519\n* 4523\n* 4547\n* 4549\n* 4561\n* 4567\n* 4583\n* 4591\n* 4597\n* 4603\n* 4621\n* 4637\n* 4639\n* 4643\n* 4649\n* 4651\n* 4657\n* 4663\n* 4673\n* 4679\n* 4691\n* 4703\n* 4721\n* 4723\n* 4729\n* 4733\n* 4751\n* 4759\n* 4783\n* 4787\n* 4789\n* 4793\n* 4799\n* 4801\n* 4813\n* 4817\n* 4831\n* 4861\n* 4871\n* 4877\n* 4889\n* 4903\n* 4909\n* 4919\n* 4931\n* 4933\n* 4937\n* 4943\n* 4951\n* 4957\n* 4967\n* 4969\n* 4973\n* 4987\n* 4993\n* 4999\n* 5003\n* 5009\n* 5011\n* 5021\n* 5023\n* 5039\n* 5051\n* 5059\n* 5077\n* 5081\n* 5087\n* 5099\n* 5101\n* 5107\n* 5113\n* 5119\n* 5147\n* 5153\n* 5167\n* 5171\n* 5179\n* 5189\n* 5197\n* 5209\n* 5227\n* 5231\n* 5233\n* 5237\n* 5261\n* 5273\n* 5279\n* 5281\n* 5297\n* 5303\n* 5309\n* 5323\n* 5333\n* 5347\n* 5351\n* 5381\n* 5387\n* 5393\n* 5399\n* 5407\n* 5413\n* 5417\n* 5419\n* 5431\n* 5437\n* 5441\n* 5443\n* 5449\n* 5471\n* 5477\n* 5479\n* 5483\n* 5501\n* 5503\n* 5507\n* 5519\n* 5521\n* 5527\n* 5531\n* 5557\n* 5563\n* 5569\n* 5573\n* 5581\n* 5591\n* 5623\n* 5639\n* 5641\n* 5647\n* 5651\n* 5653\n* 5657\n* 5659\n* 5669\n* 5683\n* 5689\n* 5693\n* 5701\n* 5711\n* 5717\n* 5737\n* 5741\n* 5743\n* 5749\n* 5779\n* 5783\n* 5791\n* 5801\n* 5807\n* 5813\n* 5821\n* 5827\n* 5839\n* 5843\n* 5849\n* 5851\n* 5857\n* 5861\n* 5867\n* 5869\n* 5879\n* 5881\n* 5897\n* 5903\n* 5923\n* 5927\n* 5939\n* 5953\n* 5981\n* 5987\n* 6007\n* 6011\n* 6029\n* 6037\n* 6043\n* 6047\n* 6053\n* 6067\n* 6073\n* 6079\n* 6089\n* 6091\n* 6101\n* 6113\n* 6121\n* 6131\n* 6133\n* 6143\n* 6151\n* 6163\n* 6173\n* 6197\n* 6199\n* 6203\n* 6211\n* 6217\n* 6221\n* 6229\n* 6247\n* 6257\n* 6263\n* 6269\n* 6271\n* 6277\n* 6287\n* 6299\n* 6301\n* 6311\n* 6317\n* 6323\n* 6329\n* 6337\n* 6343\n* 6353\n* 6359\n* 6361\n* 6367\n* 6373\n* 6379\n* 6389\n* 6397\n* 6421\n* 6427\n* 6449\n* 6451\n* 6469\n* 6473\n* 6481\n* 6491\n* 6521\n* 6529\n* 6547\n* 6551\n* 6553\n* 6563\n* 6569\n* 6571\n* 6577\n* 6581\n* 6599\n* 6607\n* 6619\n* 6637\n* 6653\n* 6659\n* 6661\n* 6673\n* 6679\n* 6689\n* 6691\n* 6701\n* 6703\n* 6709\n* 6719\n* 6733\n* 6737\n* 6761\n* 6763\n* 6779\n* 6781\n* 6791\n* 6793\n* 6803\n* 6823\n* 6827\n* 6829\n* 6833\n* 6841\n* 6857\n* 6863\n* 6869\n* 6871\n* 6883\n* 6899\n* 6907\n* 6911\n* 6917\n* 6947\n* 6949\n* 6959\n* 6961\n* 6967\n* 6971\n* 6977\n* 6983\n* 6991\n* 6997\n* 7001\n* 7013\n* 7019\n* 7027\n* 7039\n* 7043\n* 7057\n* 7069\n* 7079\n* 7103\n* 7109\n* 7121\n* 7127\n* 7129\n* 7151\n* 7159\n* 7177\n* 7187\n* 7193\n* 7207\n* 7211\n* 7213\n* 7219\n* 7229\n* 7237\n* 7243\n* 7247\n* 7253\n* 7283\n* 7297\n* 7307\n* 7309\n* 7321\n* 7331\n* 7333\n* 7349\n* 7351\n* 7369\n* 7393\n* 7411\n* 7417\n* 7433\n* 7451\n* 7457\n* 7459\n* 7477\n* 7481\n* 7487\n* 7489\n* 7499\n* 7507\n* 7517\n* 7523\n* 7529\n* 7537\n* 7541\n* 7547\n* 7549\n* 7559\n* 7561\n* 7573\n* 7577\n* 7583\n* 7589\n* 7591\n* 7603\n* 7607\n* 7621\n* 7639\n* 7643\n* 7649\n* 7669\n* 7673\n* 7681\n* 7687\n* 7691\n* 7699\n* 7703\n* 7717\n* 7723\n* 7727\n* 7741\n* 7753\n* 7757\n* 7759\n* 7789\n* 7793\n* 7817\n* 7823\n* 7829\n* 7841\n* 7853\n* 7867\n* 7873\n* 7877\n* 7879\n* 7883\n* 7901\n* 7907\n* 7919\n \n","source":"_posts/primes.md","raw":"---\ntitle: Prime numbers\ndate: 2021-11-01 20:07:58\ntags:\n---\n\nAlgorithms made to find primes numbers are a good way to try out a new programming language. I include here some lists of numbers to compare the output of your programs.\n\n## Downloadable lists\n\nHere are multiples files with a decent number of prime numbers in them.\nHere are multiple files with a decent number of prime numbers in them.\n* [First 1 000 000 primes numbers](/big_files/1000000_primes)\n* [First 10 000 000 primes numbers](/big_files/10000000_primes)\n* [First 100 000 000 primes numbers](/big_files/100000000_primes)\n\n## List of the first 1000 primes numbers\n\nFor the sake of convenience, you can find below a list of the first 1000 primes numbers.\n\n* 2\n* 3\n* 5\n* 7\n* 11\n* 13\n* 17\n* 19\n* 23\n* 29\n* 31\n* 37\n* 41\n* 43\n* 47\n* 53\n* 59\n* 61\n* 67\n* 71\n* 73\n* 79\n* 83\n* 89\n* 97\n* 101\n* 103\n* 107\n* 109\n* 113\n* 127\n* 131\n* 137\n* 139\n* 149\n* 151\n* 157\n* 163\n* 167\n* 173\n* 179\n* 181\n* 191\n* 193\n* 197\n* 199\n* 211\n* 223\n* 227\n* 229\n* 233\n* 239\n* 241\n* 251\n* 257\n* 263\n* 269\n* 271\n* 277\n* 281\n* 283\n* 293\n* 307\n* 311\n* 313\n* 317\n* 331\n* 337\n* 347\n* 349\n* 353\n* 359\n* 367\n* 373\n* 379\n* 383\n* 389\n* 397\n* 401\n* 409\n* 419\n* 421\n* 431\n* 433\n* 439\n* 443\n* 449\n* 457\n* 461\n* 463\n* 467\n* 479\n* 487\n* 491\n* 499\n* 503\n* 509\n* 521\n* 523\n* 541\n* 547\n* 557\n* 563\n* 569\n* 571\n* 577\n* 587\n* 593\n* 599\n* 601\n* 607\n* 613\n* 617\n* 619\n* 631\n* 641\n* 643\n* 647\n* 653\n* 659\n* 661\n* 673\n* 677\n* 683\n* 691\n* 701\n* 709\n* 719\n* 727\n* 733\n* 739\n* 743\n* 751\n* 757\n* 761\n* 769\n* 773\n* 787\n* 797\n* 809\n* 811\n* 821\n* 823\n* 827\n* 829\n* 839\n* 853\n* 857\n* 859\n* 863\n* 877\n* 881\n* 883\n* 887\n* 907\n* 911\n* 919\n* 929\n* 937\n* 941\n* 947\n* 953\n* 967\n* 971\n* 977\n* 983\n* 991\n* 997\n* 1009\n* 1013\n* 1019\n* 1021\n* 1031\n* 1033\n* 1039\n* 1049\n* 1051\n* 1061\n* 1063\n* 1069\n* 1087\n* 1091\n* 1093\n* 1097\n* 1103\n* 1109\n* 1117\n* 1123\n* 1129\n* 1151\n* 1153\n* 1163\n* 1171\n* 1181\n* 1187\n* 1193\n* 1201\n* 1213\n* 1217\n* 1223\n* 1229\n* 1231\n* 1237\n* 1249\n* 1259\n* 1277\n* 1279\n* 1283\n* 1289\n* 1291\n* 1297\n* 1301\n* 1303\n* 1307\n* 1319\n* 1321\n* 1327\n* 1361\n* 1367\n* 1373\n* 1381\n* 1399\n* 1409\n* 1423\n* 1427\n* 1429\n* 1433\n* 1439\n* 1447\n* 1451\n* 1453\n* 1459\n* 1471\n* 1481\n* 1483\n* 1487\n* 1489\n* 1493\n* 1499\n* 1511\n* 1523\n* 1531\n* 1543\n* 1549\n* 1553\n* 1559\n* 1567\n* 1571\n* 1579\n* 1583\n* 1597\n* 1601\n* 1607\n* 1609\n* 1613\n* 1619\n* 1621\n* 1627\n* 1637\n* 1657\n* 1663\n* 1667\n* 1669\n* 1693\n* 1697\n* 1699\n* 1709\n* 1721\n* 1723\n* 1733\n* 1741\n* 1747\n* 1753\n* 1759\n* 1777\n* 1783\n* 1787\n* 1789\n* 1801\n* 1811\n* 1823\n* 1831\n* 1847\n* 1861\n* 1867\n* 1871\n* 1873\n* 1877\n* 1879\n* 1889\n* 1901\n* 1907\n* 1913\n* 1931\n* 1933\n* 1949\n* 1951\n* 1973\n* 1979\n* 1987\n* 1993\n* 1997\n* 1999\n* 2003\n* 2011\n* 2017\n* 2027\n* 2029\n* 2039\n* 2053\n* 2063\n* 2069\n* 2081\n* 2083\n* 2087\n* 2089\n* 2099\n* 2111\n* 2113\n* 2129\n* 2131\n* 2137\n* 2141\n* 2143\n* 2153\n* 2161\n* 2179\n* 2203\n* 2207\n* 2213\n* 2221\n* 2237\n* 2239\n* 2243\n* 2251\n* 2267\n* 2269\n* 2273\n* 2281\n* 2287\n* 2293\n* 2297\n* 2309\n* 2311\n* 2333\n* 2339\n* 2341\n* 2347\n* 2351\n* 2357\n* 2371\n* 2377\n* 2381\n* 2383\n* 2389\n* 2393\n* 2399\n* 2411\n* 2417\n* 2423\n* 2437\n* 2441\n* 2447\n* 2459\n* 2467\n* 2473\n* 2477\n* 2503\n* 2521\n* 2531\n* 2539\n* 2543\n* 2549\n* 2551\n* 2557\n* 2579\n* 2591\n* 2593\n* 2609\n* 2617\n* 2621\n* 2633\n* 2647\n* 2657\n* 2659\n* 2663\n* 2671\n* 2677\n* 2683\n* 2687\n* 2689\n* 2693\n* 2699\n* 2707\n* 2711\n* 2713\n* 2719\n* 2729\n* 2731\n* 2741\n* 2749\n* 2753\n* 2767\n* 2777\n* 2789\n* 2791\n* 2797\n* 2801\n* 2803\n* 2819\n* 2833\n* 2837\n* 2843\n* 2851\n* 2857\n* 2861\n* 2879\n* 2887\n* 2897\n* 2903\n* 2909\n* 2917\n* 2927\n* 2939\n* 2953\n* 2957\n* 2963\n* 2969\n* 2971\n* 2999\n* 3001\n* 3011\n* 3019\n* 3023\n* 3037\n* 3041\n* 3049\n* 3061\n* 3067\n* 3079\n* 3083\n* 3089\n* 3109\n* 3119\n* 3121\n* 3137\n* 3163\n* 3167\n* 3169\n* 3181\n* 3187\n* 3191\n* 3203\n* 3209\n* 3217\n* 3221\n* 3229\n* 3251\n* 3253\n* 3257\n* 3259\n* 3271\n* 3299\n* 3301\n* 3307\n* 3313\n* 3319\n* 3323\n* 3329\n* 3331\n* 3343\n* 3347\n* 3359\n* 3361\n* 3371\n* 3373\n* 3389\n* 3391\n* 3407\n* 3413\n* 3433\n* 3449\n* 3457\n* 3461\n* 3463\n* 3467\n* 3469\n* 3491\n* 3499\n* 3511\n* 3517\n* 3527\n* 3529\n* 3533\n* 3539\n* 3541\n* 3547\n* 3557\n* 3559\n* 3571\n* 3581\n* 3583\n* 3593\n* 3607\n* 3613\n* 3617\n* 3623\n* 3631\n* 3637\n* 3643\n* 3659\n* 3671\n* 3673\n* 3677\n* 3691\n* 3697\n* 3701\n* 3709\n* 3719\n* 3727\n* 3733\n* 3739\n* 3761\n* 3767\n* 3769\n* 3779\n* 3793\n* 3797\n* 3803\n* 3821\n* 3823\n* 3833\n* 3847\n* 3851\n* 3853\n* 3863\n* 3877\n* 3881\n* 3889\n* 3907\n* 3911\n* 3917\n* 3919\n* 3923\n* 3929\n* 3931\n* 3943\n* 3947\n* 3967\n* 3989\n* 4001\n* 4003\n* 4007\n* 4013\n* 4019\n* 4021\n* 4027\n* 4049\n* 4051\n* 4057\n* 4073\n* 4079\n* 4091\n* 4093\n* 4099\n* 4111\n* 4127\n* 4129\n* 4133\n* 4139\n* 4153\n* 4157\n* 4159\n* 4177\n* 4201\n* 4211\n* 4217\n* 4219\n* 4229\n* 4231\n* 4241\n* 4243\n* 4253\n* 4259\n* 4261\n* 4271\n* 4273\n* 4283\n* 4289\n* 4297\n* 4327\n* 4337\n* 4339\n* 4349\n* 4357\n* 4363\n* 4373\n* 4391\n* 4397\n* 4409\n* 4421\n* 4423\n* 4441\n* 4447\n* 4451\n* 4457\n* 4463\n* 4481\n* 4483\n* 4493\n* 4507\n* 4513\n* 4517\n* 4519\n* 4523\n* 4547\n* 4549\n* 4561\n* 4567\n* 4583\n* 4591\n* 4597\n* 4603\n* 4621\n* 4637\n* 4639\n* 4643\n* 4649\n* 4651\n* 4657\n* 4663\n* 4673\n* 4679\n* 4691\n* 4703\n* 4721\n* 4723\n* 4729\n* 4733\n* 4751\n* 4759\n* 4783\n* 4787\n* 4789\n* 4793\n* 4799\n* 4801\n* 4813\n* 4817\n* 4831\n* 4861\n* 4871\n* 4877\n* 4889\n* 4903\n* 4909\n* 4919\n* 4931\n* 4933\n* 4937\n* 4943\n* 4951\n* 4957\n* 4967\n* 4969\n* 4973\n* 4987\n* 4993\n* 4999\n* 5003\n* 5009\n* 5011\n* 5021\n* 5023\n* 5039\n* 5051\n* 5059\n* 5077\n* 5081\n* 5087\n* 5099\n* 5101\n* 5107\n* 5113\n* 5119\n* 5147\n* 5153\n* 5167\n* 5171\n* 5179\n* 5189\n* 5197\n* 5209\n* 5227\n* 5231\n* 5233\n* 5237\n* 5261\n* 5273\n* 5279\n* 5281\n* 5297\n* 5303\n* 5309\n* 5323\n* 5333\n* 5347\n* 5351\n* 5381\n* 5387\n* 5393\n* 5399\n* 5407\n* 5413\n* 5417\n* 5419\n* 5431\n* 5437\n* 5441\n* 5443\n* 5449\n* 5471\n* 5477\n* 5479\n* 5483\n* 5501\n* 5503\n* 5507\n* 5519\n* 5521\n* 5527\n* 5531\n* 5557\n* 5563\n* 5569\n* 5573\n* 5581\n* 5591\n* 5623\n* 5639\n* 5641\n* 5647\n* 5651\n* 5653\n* 5657\n* 5659\n* 5669\n* 5683\n* 5689\n* 5693\n* 5701\n* 5711\n* 5717\n* 5737\n* 5741\n* 5743\n* 5749\n* 5779\n* 5783\n* 5791\n* 5801\n* 5807\n* 5813\n* 5821\n* 5827\n* 5839\n* 5843\n* 5849\n* 5851\n* 5857\n* 5861\n* 5867\n* 5869\n* 5879\n* 5881\n* 5897\n* 5903\n* 5923\n* 5927\n* 5939\n* 5953\n* 5981\n* 5987\n* 6007\n* 6011\n* 6029\n* 6037\n* 6043\n* 6047\n* 6053\n* 6067\n* 6073\n* 6079\n* 6089\n* 6091\n* 6101\n* 6113\n* 6121\n* 6131\n* 6133\n* 6143\n* 6151\n* 6163\n* 6173\n* 6197\n* 6199\n* 6203\n* 6211\n* 6217\n* 6221\n* 6229\n* 6247\n* 6257\n* 6263\n* 6269\n* 6271\n* 6277\n* 6287\n* 6299\n* 6301\n* 6311\n* 6317\n* 6323\n* 6329\n* 6337\n* 6343\n* 6353\n* 6359\n* 6361\n* 6367\n* 6373\n* 6379\n* 6389\n* 6397\n* 6421\n* 6427\n* 6449\n* 6451\n* 6469\n* 6473\n* 6481\n* 6491\n* 6521\n* 6529\n* 6547\n* 6551\n* 6553\n* 6563\n* 6569\n* 6571\n* 6577\n* 6581\n* 6599\n* 6607\n* 6619\n* 6637\n* 6653\n* 6659\n* 6661\n* 6673\n* 6679\n* 6689\n* 6691\n* 6701\n* 6703\n* 6709\n* 6719\n* 6733\n* 6737\n* 6761\n* 6763\n* 6779\n* 6781\n* 6791\n* 6793\n* 6803\n* 6823\n* 6827\n* 6829\n* 6833\n* 6841\n* 6857\n* 6863\n* 6869\n* 6871\n* 6883\n* 6899\n* 6907\n* 6911\n* 6917\n* 6947\n* 6949\n* 6959\n* 6961\n* 6967\n* 6971\n* 6977\n* 6983\n* 6991\n* 6997\n* 7001\n* 7013\n* 7019\n* 7027\n* 7039\n* 7043\n* 7057\n* 7069\n* 7079\n* 7103\n* 7109\n* 7121\n* 7127\n* 7129\n* 7151\n* 7159\n* 7177\n* 7187\n* 7193\n* 7207\n* 7211\n* 7213\n* 7219\n* 7229\n* 7237\n* 7243\n* 7247\n* 7253\n* 7283\n* 7297\n* 7307\n* 7309\n* 7321\n* 7331\n* 7333\n* 7349\n* 7351\n* 7369\n* 7393\n* 7411\n* 7417\n* 7433\n* 7451\n* 7457\n* 7459\n* 7477\n* 7481\n* 7487\n* 7489\n* 7499\n* 7507\n* 7517\n* 7523\n* 7529\n* 7537\n* 7541\n* 7547\n* 7549\n* 7559\n* 7561\n* 7573\n* 7577\n* 7583\n* 7589\n* 7591\n* 7603\n* 7607\n* 7621\n* 7639\n* 7643\n* 7649\n* 7669\n* 7673\n* 7681\n* 7687\n* 7691\n* 7699\n* 7703\n* 7717\n* 7723\n* 7727\n* 7741\n* 7753\n* 7757\n* 7759\n* 7789\n* 7793\n* 7817\n* 7823\n* 7829\n* 7841\n* 7853\n* 7867\n* 7873\n* 7877\n* 7879\n* 7883\n* 7901\n* 7907\n* 7919\n \n","slug":"primes","published":1,"updated":"2022-01-08T16:35:11.502Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cky6f5ohp0005cflzcfzbe06d","content":"<p>Algorithms made to find primes numbers are a good way to try out a new programming language. I include here some lists of numbers to compare the output of your programs.</p>\n<h2 id=\"Downloadable-lists\"><a href=\"#Downloadable-lists\" class=\"headerlink\" title=\"Downloadable lists\"></a>Downloadable lists</h2><p>Here are multiples files with a decent number of prime numbers in them.<br>Here are multiple files with a decent number of prime numbers in them.</p>\n<ul>\n<li><a href=\"/big_files/1000000_primes\">First 1 000 000 primes numbers</a></li>\n<li><a href=\"/big_files/10000000_primes\">First 10 000 000 primes numbers</a></li>\n<li><a href=\"/big_files/100000000_primes\">First 100 000 000 primes numbers</a></li>\n</ul>\n<h2 id=\"List-of-the-first-1000-primes-numbers\"><a href=\"#List-of-the-first-1000-primes-numbers\" class=\"headerlink\" title=\"List of the first 1000 primes numbers\"></a>List of the first 1000 primes numbers</h2><p>For the sake of convenience, you can find below a list of the first 1000 primes numbers.</p>\n<ul>\n<li>2</li>\n<li>3</li>\n<li>5</li>\n<li>7</li>\n<li>11</li>\n<li>13</li>\n<li>17</li>\n<li>19</li>\n<li>23</li>\n<li>29</li>\n<li>31</li>\n<li>37</li>\n<li>41</li>\n<li>43</li>\n<li>47</li>\n<li>53</li>\n<li>59</li>\n<li>61</li>\n<li>67</li>\n<li>71</li>\n<li>73</li>\n<li>79</li>\n<li>83</li>\n<li>89</li>\n<li>97</li>\n<li>101</li>\n<li>103</li>\n<li>107</li>\n<li>109</li>\n<li>113</li>\n<li>127</li>\n<li>131</li>\n<li>137</li>\n<li>139</li>\n<li>149</li>\n<li>151</li>\n<li>157</li>\n<li>163</li>\n<li>167</li>\n<li>173</li>\n<li>179</li>\n<li>181</li>\n<li>191</li>\n<li>193</li>\n<li>197</li>\n<li>199</li>\n<li>211</li>\n<li>223</li>\n<li>227</li>\n<li>229</li>\n<li>233</li>\n<li>239</li>\n<li>241</li>\n<li>251</li>\n<li>257</li>\n<li>263</li>\n<li>269</li>\n<li>271</li>\n<li>277</li>\n<li>281</li>\n<li>283</li>\n<li>293</li>\n<li>307</li>\n<li>311</li>\n<li>313</li>\n<li>317</li>\n<li>331</li>\n<li>337</li>\n<li>347</li>\n<li>349</li>\n<li>353</li>\n<li>359</li>\n<li>367</li>\n<li>373</li>\n<li>379</li>\n<li>383</li>\n<li>389</li>\n<li>397</li>\n<li>401</li>\n<li>409</li>\n<li>419</li>\n<li>421</li>\n<li>431</li>\n<li>433</li>\n<li>439</li>\n<li>443</li>\n<li>449</li>\n<li>457</li>\n<li>461</li>\n<li>463</li>\n<li>467</li>\n<li>479</li>\n<li>487</li>\n<li>491</li>\n<li>499</li>\n<li>503</li>\n<li>509</li>\n<li>521</li>\n<li>523</li>\n<li>541</li>\n<li>547</li>\n<li>557</li>\n<li>563</li>\n<li>569</li>\n<li>571</li>\n<li>577</li>\n<li>587</li>\n<li>593</li>\n<li>599</li>\n<li>601</li>\n<li>607</li>\n<li>613</li>\n<li>617</li>\n<li>619</li>\n<li>631</li>\n<li>641</li>\n<li>643</li>\n<li>647</li>\n<li>653</li>\n<li>659</li>\n<li>661</li>\n<li>673</li>\n<li>677</li>\n<li>683</li>\n<li>691</li>\n<li>701</li>\n<li>709</li>\n<li>719</li>\n<li>727</li>\n<li>733</li>\n<li>739</li>\n<li>743</li>\n<li>751</li>\n<li>757</li>\n<li>761</li>\n<li>769</li>\n<li>773</li>\n<li>787</li>\n<li>797</li>\n<li>809</li>\n<li>811</li>\n<li>821</li>\n<li>823</li>\n<li>827</li>\n<li>829</li>\n<li>839</li>\n<li>853</li>\n<li>857</li>\n<li>859</li>\n<li>863</li>\n<li>877</li>\n<li>881</li>\n<li>883</li>\n<li>887</li>\n<li>907</li>\n<li>911</li>\n<li>919</li>\n<li>929</li>\n<li>937</li>\n<li>941</li>\n<li>947</li>\n<li>953</li>\n<li>967</li>\n<li>971</li>\n<li>977</li>\n<li>983</li>\n<li>991</li>\n<li>997</li>\n<li>1009</li>\n<li>1013</li>\n<li>1019</li>\n<li>1021</li>\n<li>1031</li>\n<li>1033</li>\n<li>1039</li>\n<li>1049</li>\n<li>1051</li>\n<li>1061</li>\n<li>1063</li>\n<li>1069</li>\n<li>1087</li>\n<li>1091</li>\n<li>1093</li>\n<li>1097</li>\n<li>1103</li>\n<li>1109</li>\n<li>1117</li>\n<li>1123</li>\n<li>1129</li>\n<li>1151</li>\n<li>1153</li>\n<li>1163</li>\n<li>1171</li>\n<li>1181</li>\n<li>1187</li>\n<li>1193</li>\n<li>1201</li>\n<li>1213</li>\n<li>1217</li>\n<li>1223</li>\n<li>1229</li>\n<li>1231</li>\n<li>1237</li>\n<li>1249</li>\n<li>1259</li>\n<li>1277</li>\n<li>1279</li>\n<li>1283</li>\n<li>1289</li>\n<li>1291</li>\n<li>1297</li>\n<li>1301</li>\n<li>1303</li>\n<li>1307</li>\n<li>1319</li>\n<li>1321</li>\n<li>1327</li>\n<li>1361</li>\n<li>1367</li>\n<li>1373</li>\n<li>1381</li>\n<li>1399</li>\n<li>1409</li>\n<li>1423</li>\n<li>1427</li>\n<li>1429</li>\n<li>1433</li>\n<li>1439</li>\n<li>1447</li>\n<li>1451</li>\n<li>1453</li>\n<li>1459</li>\n<li>1471</li>\n<li>1481</li>\n<li>1483</li>\n<li>1487</li>\n<li>1489</li>\n<li>1493</li>\n<li>1499</li>\n<li>1511</li>\n<li>1523</li>\n<li>1531</li>\n<li>1543</li>\n<li>1549</li>\n<li>1553</li>\n<li>1559</li>\n<li>1567</li>\n<li>1571</li>\n<li>1579</li>\n<li>1583</li>\n<li>1597</li>\n<li>1601</li>\n<li>1607</li>\n<li>1609</li>\n<li>1613</li>\n<li>1619</li>\n<li>1621</li>\n<li>1627</li>\n<li>1637</li>\n<li>1657</li>\n<li>1663</li>\n<li>1667</li>\n<li>1669</li>\n<li>1693</li>\n<li>1697</li>\n<li>1699</li>\n<li>1709</li>\n<li>1721</li>\n<li>1723</li>\n<li>1733</li>\n<li>1741</li>\n<li>1747</li>\n<li>1753</li>\n<li>1759</li>\n<li>1777</li>\n<li>1783</li>\n<li>1787</li>\n<li>1789</li>\n<li>1801</li>\n<li>1811</li>\n<li>1823</li>\n<li>1831</li>\n<li>1847</li>\n<li>1861</li>\n<li>1867</li>\n<li>1871</li>\n<li>1873</li>\n<li>1877</li>\n<li>1879</li>\n<li>1889</li>\n<li>1901</li>\n<li>1907</li>\n<li>1913</li>\n<li>1931</li>\n<li>1933</li>\n<li>1949</li>\n<li>1951</li>\n<li>1973</li>\n<li>1979</li>\n<li>1987</li>\n<li>1993</li>\n<li>1997</li>\n<li>1999</li>\n<li>2003</li>\n<li>2011</li>\n<li>2017</li>\n<li>2027</li>\n<li>2029</li>\n<li>2039</li>\n<li>2053</li>\n<li>2063</li>\n<li>2069</li>\n<li>2081</li>\n<li>2083</li>\n<li>2087</li>\n<li>2089</li>\n<li>2099</li>\n<li>2111</li>\n<li>2113</li>\n<li>2129</li>\n<li>2131</li>\n<li>2137</li>\n<li>2141</li>\n<li>2143</li>\n<li>2153</li>\n<li>2161</li>\n<li>2179</li>\n<li>2203</li>\n<li>2207</li>\n<li>2213</li>\n<li>2221</li>\n<li>2237</li>\n<li>2239</li>\n<li>2243</li>\n<li>2251</li>\n<li>2267</li>\n<li>2269</li>\n<li>2273</li>\n<li>2281</li>\n<li>2287</li>\n<li>2293</li>\n<li>2297</li>\n<li>2309</li>\n<li>2311</li>\n<li>2333</li>\n<li>2339</li>\n<li>2341</li>\n<li>2347</li>\n<li>2351</li>\n<li>2357</li>\n<li>2371</li>\n<li>2377</li>\n<li>2381</li>\n<li>2383</li>\n<li>2389</li>\n<li>2393</li>\n<li>2399</li>\n<li>2411</li>\n<li>2417</li>\n<li>2423</li>\n<li>2437</li>\n<li>2441</li>\n<li>2447</li>\n<li>2459</li>\n<li>2467</li>\n<li>2473</li>\n<li>2477</li>\n<li>2503</li>\n<li>2521</li>\n<li>2531</li>\n<li>2539</li>\n<li>2543</li>\n<li>2549</li>\n<li>2551</li>\n<li>2557</li>\n<li>2579</li>\n<li>2591</li>\n<li>2593</li>\n<li>2609</li>\n<li>2617</li>\n<li>2621</li>\n<li>2633</li>\n<li>2647</li>\n<li>2657</li>\n<li>2659</li>\n<li>2663</li>\n<li>2671</li>\n<li>2677</li>\n<li>2683</li>\n<li>2687</li>\n<li>2689</li>\n<li>2693</li>\n<li>2699</li>\n<li>2707</li>\n<li>2711</li>\n<li>2713</li>\n<li>2719</li>\n<li>2729</li>\n<li>2731</li>\n<li>2741</li>\n<li>2749</li>\n<li>2753</li>\n<li>2767</li>\n<li>2777</li>\n<li>2789</li>\n<li>2791</li>\n<li>2797</li>\n<li>2801</li>\n<li>2803</li>\n<li>2819</li>\n<li>2833</li>\n<li>2837</li>\n<li>2843</li>\n<li>2851</li>\n<li>2857</li>\n<li>2861</li>\n<li>2879</li>\n<li>2887</li>\n<li>2897</li>\n<li>2903</li>\n<li>2909</li>\n<li>2917</li>\n<li>2927</li>\n<li>2939</li>\n<li>2953</li>\n<li>2957</li>\n<li>2963</li>\n<li>2969</li>\n<li>2971</li>\n<li>2999</li>\n<li>3001</li>\n<li>3011</li>\n<li>3019</li>\n<li>3023</li>\n<li>3037</li>\n<li>3041</li>\n<li>3049</li>\n<li>3061</li>\n<li>3067</li>\n<li>3079</li>\n<li>3083</li>\n<li>3089</li>\n<li>3109</li>\n<li>3119</li>\n<li>3121</li>\n<li>3137</li>\n<li>3163</li>\n<li>3167</li>\n<li>3169</li>\n<li>3181</li>\n<li>3187</li>\n<li>3191</li>\n<li>3203</li>\n<li>3209</li>\n<li>3217</li>\n<li>3221</li>\n<li>3229</li>\n<li>3251</li>\n<li>3253</li>\n<li>3257</li>\n<li>3259</li>\n<li>3271</li>\n<li>3299</li>\n<li>3301</li>\n<li>3307</li>\n<li>3313</li>\n<li>3319</li>\n<li>3323</li>\n<li>3329</li>\n<li>3331</li>\n<li>3343</li>\n<li>3347</li>\n<li>3359</li>\n<li>3361</li>\n<li>3371</li>\n<li>3373</li>\n<li>3389</li>\n<li>3391</li>\n<li>3407</li>\n<li>3413</li>\n<li>3433</li>\n<li>3449</li>\n<li>3457</li>\n<li>3461</li>\n<li>3463</li>\n<li>3467</li>\n<li>3469</li>\n<li>3491</li>\n<li>3499</li>\n<li>3511</li>\n<li>3517</li>\n<li>3527</li>\n<li>3529</li>\n<li>3533</li>\n<li>3539</li>\n<li>3541</li>\n<li>3547</li>\n<li>3557</li>\n<li>3559</li>\n<li>3571</li>\n<li>3581</li>\n<li>3583</li>\n<li>3593</li>\n<li>3607</li>\n<li>3613</li>\n<li>3617</li>\n<li>3623</li>\n<li>3631</li>\n<li>3637</li>\n<li>3643</li>\n<li>3659</li>\n<li>3671</li>\n<li>3673</li>\n<li>3677</li>\n<li>3691</li>\n<li>3697</li>\n<li>3701</li>\n<li>3709</li>\n<li>3719</li>\n<li>3727</li>\n<li>3733</li>\n<li>3739</li>\n<li>3761</li>\n<li>3767</li>\n<li>3769</li>\n<li>3779</li>\n<li>3793</li>\n<li>3797</li>\n<li>3803</li>\n<li>3821</li>\n<li>3823</li>\n<li>3833</li>\n<li>3847</li>\n<li>3851</li>\n<li>3853</li>\n<li>3863</li>\n<li>3877</li>\n<li>3881</li>\n<li>3889</li>\n<li>3907</li>\n<li>3911</li>\n<li>3917</li>\n<li>3919</li>\n<li>3923</li>\n<li>3929</li>\n<li>3931</li>\n<li>3943</li>\n<li>3947</li>\n<li>3967</li>\n<li>3989</li>\n<li>4001</li>\n<li>4003</li>\n<li>4007</li>\n<li>4013</li>\n<li>4019</li>\n<li>4021</li>\n<li>4027</li>\n<li>4049</li>\n<li>4051</li>\n<li>4057</li>\n<li>4073</li>\n<li>4079</li>\n<li>4091</li>\n<li>4093</li>\n<li>4099</li>\n<li>4111</li>\n<li>4127</li>\n<li>4129</li>\n<li>4133</li>\n<li>4139</li>\n<li>4153</li>\n<li>4157</li>\n<li>4159</li>\n<li>4177</li>\n<li>4201</li>\n<li>4211</li>\n<li>4217</li>\n<li>4219</li>\n<li>4229</li>\n<li>4231</li>\n<li>4241</li>\n<li>4243</li>\n<li>4253</li>\n<li>4259</li>\n<li>4261</li>\n<li>4271</li>\n<li>4273</li>\n<li>4283</li>\n<li>4289</li>\n<li>4297</li>\n<li>4327</li>\n<li>4337</li>\n<li>4339</li>\n<li>4349</li>\n<li>4357</li>\n<li>4363</li>\n<li>4373</li>\n<li>4391</li>\n<li>4397</li>\n<li>4409</li>\n<li>4421</li>\n<li>4423</li>\n<li>4441</li>\n<li>4447</li>\n<li>4451</li>\n<li>4457</li>\n<li>4463</li>\n<li>4481</li>\n<li>4483</li>\n<li>4493</li>\n<li>4507</li>\n<li>4513</li>\n<li>4517</li>\n<li>4519</li>\n<li>4523</li>\n<li>4547</li>\n<li>4549</li>\n<li>4561</li>\n<li>4567</li>\n<li>4583</li>\n<li>4591</li>\n<li>4597</li>\n<li>4603</li>\n<li>4621</li>\n<li>4637</li>\n<li>4639</li>\n<li>4643</li>\n<li>4649</li>\n<li>4651</li>\n<li>4657</li>\n<li>4663</li>\n<li>4673</li>\n<li>4679</li>\n<li>4691</li>\n<li>4703</li>\n<li>4721</li>\n<li>4723</li>\n<li>4729</li>\n<li>4733</li>\n<li>4751</li>\n<li>4759</li>\n<li>4783</li>\n<li>4787</li>\n<li>4789</li>\n<li>4793</li>\n<li>4799</li>\n<li>4801</li>\n<li>4813</li>\n<li>4817</li>\n<li>4831</li>\n<li>4861</li>\n<li>4871</li>\n<li>4877</li>\n<li>4889</li>\n<li>4903</li>\n<li>4909</li>\n<li>4919</li>\n<li>4931</li>\n<li>4933</li>\n<li>4937</li>\n<li>4943</li>\n<li>4951</li>\n<li>4957</li>\n<li>4967</li>\n<li>4969</li>\n<li>4973</li>\n<li>4987</li>\n<li>4993</li>\n<li>4999</li>\n<li>5003</li>\n<li>5009</li>\n<li>5011</li>\n<li>5021</li>\n<li>5023</li>\n<li>5039</li>\n<li>5051</li>\n<li>5059</li>\n<li>5077</li>\n<li>5081</li>\n<li>5087</li>\n<li>5099</li>\n<li>5101</li>\n<li>5107</li>\n<li>5113</li>\n<li>5119</li>\n<li>5147</li>\n<li>5153</li>\n<li>5167</li>\n<li>5171</li>\n<li>5179</li>\n<li>5189</li>\n<li>5197</li>\n<li>5209</li>\n<li>5227</li>\n<li>5231</li>\n<li>5233</li>\n<li>5237</li>\n<li>5261</li>\n<li>5273</li>\n<li>5279</li>\n<li>5281</li>\n<li>5297</li>\n<li>5303</li>\n<li>5309</li>\n<li>5323</li>\n<li>5333</li>\n<li>5347</li>\n<li>5351</li>\n<li>5381</li>\n<li>5387</li>\n<li>5393</li>\n<li>5399</li>\n<li>5407</li>\n<li>5413</li>\n<li>5417</li>\n<li>5419</li>\n<li>5431</li>\n<li>5437</li>\n<li>5441</li>\n<li>5443</li>\n<li>5449</li>\n<li>5471</li>\n<li>5477</li>\n<li>5479</li>\n<li>5483</li>\n<li>5501</li>\n<li>5503</li>\n<li>5507</li>\n<li>5519</li>\n<li>5521</li>\n<li>5527</li>\n<li>5531</li>\n<li>5557</li>\n<li>5563</li>\n<li>5569</li>\n<li>5573</li>\n<li>5581</li>\n<li>5591</li>\n<li>5623</li>\n<li>5639</li>\n<li>5641</li>\n<li>5647</li>\n<li>5651</li>\n<li>5653</li>\n<li>5657</li>\n<li>5659</li>\n<li>5669</li>\n<li>5683</li>\n<li>5689</li>\n<li>5693</li>\n<li>5701</li>\n<li>5711</li>\n<li>5717</li>\n<li>5737</li>\n<li>5741</li>\n<li>5743</li>\n<li>5749</li>\n<li>5779</li>\n<li>5783</li>\n<li>5791</li>\n<li>5801</li>\n<li>5807</li>\n<li>5813</li>\n<li>5821</li>\n<li>5827</li>\n<li>5839</li>\n<li>5843</li>\n<li>5849</li>\n<li>5851</li>\n<li>5857</li>\n<li>5861</li>\n<li>5867</li>\n<li>5869</li>\n<li>5879</li>\n<li>5881</li>\n<li>5897</li>\n<li>5903</li>\n<li>5923</li>\n<li>5927</li>\n<li>5939</li>\n<li>5953</li>\n<li>5981</li>\n<li>5987</li>\n<li>6007</li>\n<li>6011</li>\n<li>6029</li>\n<li>6037</li>\n<li>6043</li>\n<li>6047</li>\n<li>6053</li>\n<li>6067</li>\n<li>6073</li>\n<li>6079</li>\n<li>6089</li>\n<li>6091</li>\n<li>6101</li>\n<li>6113</li>\n<li>6121</li>\n<li>6131</li>\n<li>6133</li>\n<li>6143</li>\n<li>6151</li>\n<li>6163</li>\n<li>6173</li>\n<li>6197</li>\n<li>6199</li>\n<li>6203</li>\n<li>6211</li>\n<li>6217</li>\n<li>6221</li>\n<li>6229</li>\n<li>6247</li>\n<li>6257</li>\n<li>6263</li>\n<li>6269</li>\n<li>6271</li>\n<li>6277</li>\n<li>6287</li>\n<li>6299</li>\n<li>6301</li>\n<li>6311</li>\n<li>6317</li>\n<li>6323</li>\n<li>6329</li>\n<li>6337</li>\n<li>6343</li>\n<li>6353</li>\n<li>6359</li>\n<li>6361</li>\n<li>6367</li>\n<li>6373</li>\n<li>6379</li>\n<li>6389</li>\n<li>6397</li>\n<li>6421</li>\n<li>6427</li>\n<li>6449</li>\n<li>6451</li>\n<li>6469</li>\n<li>6473</li>\n<li>6481</li>\n<li>6491</li>\n<li>6521</li>\n<li>6529</li>\n<li>6547</li>\n<li>6551</li>\n<li>6553</li>\n<li>6563</li>\n<li>6569</li>\n<li>6571</li>\n<li>6577</li>\n<li>6581</li>\n<li>6599</li>\n<li>6607</li>\n<li>6619</li>\n<li>6637</li>\n<li>6653</li>\n<li>6659</li>\n<li>6661</li>\n<li>6673</li>\n<li>6679</li>\n<li>6689</li>\n<li>6691</li>\n<li>6701</li>\n<li>6703</li>\n<li>6709</li>\n<li>6719</li>\n<li>6733</li>\n<li>6737</li>\n<li>6761</li>\n<li>6763</li>\n<li>6779</li>\n<li>6781</li>\n<li>6791</li>\n<li>6793</li>\n<li>6803</li>\n<li>6823</li>\n<li>6827</li>\n<li>6829</li>\n<li>6833</li>\n<li>6841</li>\n<li>6857</li>\n<li>6863</li>\n<li>6869</li>\n<li>6871</li>\n<li>6883</li>\n<li>6899</li>\n<li>6907</li>\n<li>6911</li>\n<li>6917</li>\n<li>6947</li>\n<li>6949</li>\n<li>6959</li>\n<li>6961</li>\n<li>6967</li>\n<li>6971</li>\n<li>6977</li>\n<li>6983</li>\n<li>6991</li>\n<li>6997</li>\n<li>7001</li>\n<li>7013</li>\n<li>7019</li>\n<li>7027</li>\n<li>7039</li>\n<li>7043</li>\n<li>7057</li>\n<li>7069</li>\n<li>7079</li>\n<li>7103</li>\n<li>7109</li>\n<li>7121</li>\n<li>7127</li>\n<li>7129</li>\n<li>7151</li>\n<li>7159</li>\n<li>7177</li>\n<li>7187</li>\n<li>7193</li>\n<li>7207</li>\n<li>7211</li>\n<li>7213</li>\n<li>7219</li>\n<li>7229</li>\n<li>7237</li>\n<li>7243</li>\n<li>7247</li>\n<li>7253</li>\n<li>7283</li>\n<li>7297</li>\n<li>7307</li>\n<li>7309</li>\n<li>7321</li>\n<li>7331</li>\n<li>7333</li>\n<li>7349</li>\n<li>7351</li>\n<li>7369</li>\n<li>7393</li>\n<li>7411</li>\n<li>7417</li>\n<li>7433</li>\n<li>7451</li>\n<li>7457</li>\n<li>7459</li>\n<li>7477</li>\n<li>7481</li>\n<li>7487</li>\n<li>7489</li>\n<li>7499</li>\n<li>7507</li>\n<li>7517</li>\n<li>7523</li>\n<li>7529</li>\n<li>7537</li>\n<li>7541</li>\n<li>7547</li>\n<li>7549</li>\n<li>7559</li>\n<li>7561</li>\n<li>7573</li>\n<li>7577</li>\n<li>7583</li>\n<li>7589</li>\n<li>7591</li>\n<li>7603</li>\n<li>7607</li>\n<li>7621</li>\n<li>7639</li>\n<li>7643</li>\n<li>7649</li>\n<li>7669</li>\n<li>7673</li>\n<li>7681</li>\n<li>7687</li>\n<li>7691</li>\n<li>7699</li>\n<li>7703</li>\n<li>7717</li>\n<li>7723</li>\n<li>7727</li>\n<li>7741</li>\n<li>7753</li>\n<li>7757</li>\n<li>7759</li>\n<li>7789</li>\n<li>7793</li>\n<li>7817</li>\n<li>7823</li>\n<li>7829</li>\n<li>7841</li>\n<li>7853</li>\n<li>7867</li>\n<li>7873</li>\n<li>7877</li>\n<li>7879</li>\n<li>7883</li>\n<li>7901</li>\n<li>7907</li>\n<li>7919</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>Algorithms made to find primes numbers are a good way to try out a new programming language. I include here some lists of numbers to compare the output of your programs.</p>\n<h2 id=\"Downloadable-lists\"><a href=\"#Downloadable-lists\" class=\"headerlink\" title=\"Downloadable lists\"></a>Downloadable lists</h2><p>Here are multiples files with a decent number of prime numbers in them.<br>Here are multiple files with a decent number of prime numbers in them.</p>\n<ul>\n<li><a href=\"/big_files/1000000_primes\">First 1 000 000 primes numbers</a></li>\n<li><a href=\"/big_files/10000000_primes\">First 10 000 000 primes numbers</a></li>\n<li><a href=\"/big_files/100000000_primes\">First 100 000 000 primes numbers</a></li>\n</ul>\n<h2 id=\"List-of-the-first-1000-primes-numbers\"><a href=\"#List-of-the-first-1000-primes-numbers\" class=\"headerlink\" title=\"List of the first 1000 primes numbers\"></a>List of the first 1000 primes numbers</h2><p>For the sake of convenience, you can find below a list of the first 1000 primes numbers.</p>\n<ul>\n<li>2</li>\n<li>3</li>\n<li>5</li>\n<li>7</li>\n<li>11</li>\n<li>13</li>\n<li>17</li>\n<li>19</li>\n<li>23</li>\n<li>29</li>\n<li>31</li>\n<li>37</li>\n<li>41</li>\n<li>43</li>\n<li>47</li>\n<li>53</li>\n<li>59</li>\n<li>61</li>\n<li>67</li>\n<li>71</li>\n<li>73</li>\n<li>79</li>\n<li>83</li>\n<li>89</li>\n<li>97</li>\n<li>101</li>\n<li>103</li>\n<li>107</li>\n<li>109</li>\n<li>113</li>\n<li>127</li>\n<li>131</li>\n<li>137</li>\n<li>139</li>\n<li>149</li>\n<li>151</li>\n<li>157</li>\n<li>163</li>\n<li>167</li>\n<li>173</li>\n<li>179</li>\n<li>181</li>\n<li>191</li>\n<li>193</li>\n<li>197</li>\n<li>199</li>\n<li>211</li>\n<li>223</li>\n<li>227</li>\n<li>229</li>\n<li>233</li>\n<li>239</li>\n<li>241</li>\n<li>251</li>\n<li>257</li>\n<li>263</li>\n<li>269</li>\n<li>271</li>\n<li>277</li>\n<li>281</li>\n<li>283</li>\n<li>293</li>\n<li>307</li>\n<li>311</li>\n<li>313</li>\n<li>317</li>\n<li>331</li>\n<li>337</li>\n<li>347</li>\n<li>349</li>\n<li>353</li>\n<li>359</li>\n<li>367</li>\n<li>373</li>\n<li>379</li>\n<li>383</li>\n<li>389</li>\n<li>397</li>\n<li>401</li>\n<li>409</li>\n<li>419</li>\n<li>421</li>\n<li>431</li>\n<li>433</li>\n<li>439</li>\n<li>443</li>\n<li>449</li>\n<li>457</li>\n<li>461</li>\n<li>463</li>\n<li>467</li>\n<li>479</li>\n<li>487</li>\n<li>491</li>\n<li>499</li>\n<li>503</li>\n<li>509</li>\n<li>521</li>\n<li>523</li>\n<li>541</li>\n<li>547</li>\n<li>557</li>\n<li>563</li>\n<li>569</li>\n<li>571</li>\n<li>577</li>\n<li>587</li>\n<li>593</li>\n<li>599</li>\n<li>601</li>\n<li>607</li>\n<li>613</li>\n<li>617</li>\n<li>619</li>\n<li>631</li>\n<li>641</li>\n<li>643</li>\n<li>647</li>\n<li>653</li>\n<li>659</li>\n<li>661</li>\n<li>673</li>\n<li>677</li>\n<li>683</li>\n<li>691</li>\n<li>701</li>\n<li>709</li>\n<li>719</li>\n<li>727</li>\n<li>733</li>\n<li>739</li>\n<li>743</li>\n<li>751</li>\n<li>757</li>\n<li>761</li>\n<li>769</li>\n<li>773</li>\n<li>787</li>\n<li>797</li>\n<li>809</li>\n<li>811</li>\n<li>821</li>\n<li>823</li>\n<li>827</li>\n<li>829</li>\n<li>839</li>\n<li>853</li>\n<li>857</li>\n<li>859</li>\n<li>863</li>\n<li>877</li>\n<li>881</li>\n<li>883</li>\n<li>887</li>\n<li>907</li>\n<li>911</li>\n<li>919</li>\n<li>929</li>\n<li>937</li>\n<li>941</li>\n<li>947</li>\n<li>953</li>\n<li>967</li>\n<li>971</li>\n<li>977</li>\n<li>983</li>\n<li>991</li>\n<li>997</li>\n<li>1009</li>\n<li>1013</li>\n<li>1019</li>\n<li>1021</li>\n<li>1031</li>\n<li>1033</li>\n<li>1039</li>\n<li>1049</li>\n<li>1051</li>\n<li>1061</li>\n<li>1063</li>\n<li>1069</li>\n<li>1087</li>\n<li>1091</li>\n<li>1093</li>\n<li>1097</li>\n<li>1103</li>\n<li>1109</li>\n<li>1117</li>\n<li>1123</li>\n<li>1129</li>\n<li>1151</li>\n<li>1153</li>\n<li>1163</li>\n<li>1171</li>\n<li>1181</li>\n<li>1187</li>\n<li>1193</li>\n<li>1201</li>\n<li>1213</li>\n<li>1217</li>\n<li>1223</li>\n<li>1229</li>\n<li>1231</li>\n<li>1237</li>\n<li>1249</li>\n<li>1259</li>\n<li>1277</li>\n<li>1279</li>\n<li>1283</li>\n<li>1289</li>\n<li>1291</li>\n<li>1297</li>\n<li>1301</li>\n<li>1303</li>\n<li>1307</li>\n<li>1319</li>\n<li>1321</li>\n<li>1327</li>\n<li>1361</li>\n<li>1367</li>\n<li>1373</li>\n<li>1381</li>\n<li>1399</li>\n<li>1409</li>\n<li>1423</li>\n<li>1427</li>\n<li>1429</li>\n<li>1433</li>\n<li>1439</li>\n<li>1447</li>\n<li>1451</li>\n<li>1453</li>\n<li>1459</li>\n<li>1471</li>\n<li>1481</li>\n<li>1483</li>\n<li>1487</li>\n<li>1489</li>\n<li>1493</li>\n<li>1499</li>\n<li>1511</li>\n<li>1523</li>\n<li>1531</li>\n<li>1543</li>\n<li>1549</li>\n<li>1553</li>\n<li>1559</li>\n<li>1567</li>\n<li>1571</li>\n<li>1579</li>\n<li>1583</li>\n<li>1597</li>\n<li>1601</li>\n<li>1607</li>\n<li>1609</li>\n<li>1613</li>\n<li>1619</li>\n<li>1621</li>\n<li>1627</li>\n<li>1637</li>\n<li>1657</li>\n<li>1663</li>\n<li>1667</li>\n<li>1669</li>\n<li>1693</li>\n<li>1697</li>\n<li>1699</li>\n<li>1709</li>\n<li>1721</li>\n<li>1723</li>\n<li>1733</li>\n<li>1741</li>\n<li>1747</li>\n<li>1753</li>\n<li>1759</li>\n<li>1777</li>\n<li>1783</li>\n<li>1787</li>\n<li>1789</li>\n<li>1801</li>\n<li>1811</li>\n<li>1823</li>\n<li>1831</li>\n<li>1847</li>\n<li>1861</li>\n<li>1867</li>\n<li>1871</li>\n<li>1873</li>\n<li>1877</li>\n<li>1879</li>\n<li>1889</li>\n<li>1901</li>\n<li>1907</li>\n<li>1913</li>\n<li>1931</li>\n<li>1933</li>\n<li>1949</li>\n<li>1951</li>\n<li>1973</li>\n<li>1979</li>\n<li>1987</li>\n<li>1993</li>\n<li>1997</li>\n<li>1999</li>\n<li>2003</li>\n<li>2011</li>\n<li>2017</li>\n<li>2027</li>\n<li>2029</li>\n<li>2039</li>\n<li>2053</li>\n<li>2063</li>\n<li>2069</li>\n<li>2081</li>\n<li>2083</li>\n<li>2087</li>\n<li>2089</li>\n<li>2099</li>\n<li>2111</li>\n<li>2113</li>\n<li>2129</li>\n<li>2131</li>\n<li>2137</li>\n<li>2141</li>\n<li>2143</li>\n<li>2153</li>\n<li>2161</li>\n<li>2179</li>\n<li>2203</li>\n<li>2207</li>\n<li>2213</li>\n<li>2221</li>\n<li>2237</li>\n<li>2239</li>\n<li>2243</li>\n<li>2251</li>\n<li>2267</li>\n<li>2269</li>\n<li>2273</li>\n<li>2281</li>\n<li>2287</li>\n<li>2293</li>\n<li>2297</li>\n<li>2309</li>\n<li>2311</li>\n<li>2333</li>\n<li>2339</li>\n<li>2341</li>\n<li>2347</li>\n<li>2351</li>\n<li>2357</li>\n<li>2371</li>\n<li>2377</li>\n<li>2381</li>\n<li>2383</li>\n<li>2389</li>\n<li>2393</li>\n<li>2399</li>\n<li>2411</li>\n<li>2417</li>\n<li>2423</li>\n<li>2437</li>\n<li>2441</li>\n<li>2447</li>\n<li>2459</li>\n<li>2467</li>\n<li>2473</li>\n<li>2477</li>\n<li>2503</li>\n<li>2521</li>\n<li>2531</li>\n<li>2539</li>\n<li>2543</li>\n<li>2549</li>\n<li>2551</li>\n<li>2557</li>\n<li>2579</li>\n<li>2591</li>\n<li>2593</li>\n<li>2609</li>\n<li>2617</li>\n<li>2621</li>\n<li>2633</li>\n<li>2647</li>\n<li>2657</li>\n<li>2659</li>\n<li>2663</li>\n<li>2671</li>\n<li>2677</li>\n<li>2683</li>\n<li>2687</li>\n<li>2689</li>\n<li>2693</li>\n<li>2699</li>\n<li>2707</li>\n<li>2711</li>\n<li>2713</li>\n<li>2719</li>\n<li>2729</li>\n<li>2731</li>\n<li>2741</li>\n<li>2749</li>\n<li>2753</li>\n<li>2767</li>\n<li>2777</li>\n<li>2789</li>\n<li>2791</li>\n<li>2797</li>\n<li>2801</li>\n<li>2803</li>\n<li>2819</li>\n<li>2833</li>\n<li>2837</li>\n<li>2843</li>\n<li>2851</li>\n<li>2857</li>\n<li>2861</li>\n<li>2879</li>\n<li>2887</li>\n<li>2897</li>\n<li>2903</li>\n<li>2909</li>\n<li>2917</li>\n<li>2927</li>\n<li>2939</li>\n<li>2953</li>\n<li>2957</li>\n<li>2963</li>\n<li>2969</li>\n<li>2971</li>\n<li>2999</li>\n<li>3001</li>\n<li>3011</li>\n<li>3019</li>\n<li>3023</li>\n<li>3037</li>\n<li>3041</li>\n<li>3049</li>\n<li>3061</li>\n<li>3067</li>\n<li>3079</li>\n<li>3083</li>\n<li>3089</li>\n<li>3109</li>\n<li>3119</li>\n<li>3121</li>\n<li>3137</li>\n<li>3163</li>\n<li>3167</li>\n<li>3169</li>\n<li>3181</li>\n<li>3187</li>\n<li>3191</li>\n<li>3203</li>\n<li>3209</li>\n<li>3217</li>\n<li>3221</li>\n<li>3229</li>\n<li>3251</li>\n<li>3253</li>\n<li>3257</li>\n<li>3259</li>\n<li>3271</li>\n<li>3299</li>\n<li>3301</li>\n<li>3307</li>\n<li>3313</li>\n<li>3319</li>\n<li>3323</li>\n<li>3329</li>\n<li>3331</li>\n<li>3343</li>\n<li>3347</li>\n<li>3359</li>\n<li>3361</li>\n<li>3371</li>\n<li>3373</li>\n<li>3389</li>\n<li>3391</li>\n<li>3407</li>\n<li>3413</li>\n<li>3433</li>\n<li>3449</li>\n<li>3457</li>\n<li>3461</li>\n<li>3463</li>\n<li>3467</li>\n<li>3469</li>\n<li>3491</li>\n<li>3499</li>\n<li>3511</li>\n<li>3517</li>\n<li>3527</li>\n<li>3529</li>\n<li>3533</li>\n<li>3539</li>\n<li>3541</li>\n<li>3547</li>\n<li>3557</li>\n<li>3559</li>\n<li>3571</li>\n<li>3581</li>\n<li>3583</li>\n<li>3593</li>\n<li>3607</li>\n<li>3613</li>\n<li>3617</li>\n<li>3623</li>\n<li>3631</li>\n<li>3637</li>\n<li>3643</li>\n<li>3659</li>\n<li>3671</li>\n<li>3673</li>\n<li>3677</li>\n<li>3691</li>\n<li>3697</li>\n<li>3701</li>\n<li>3709</li>\n<li>3719</li>\n<li>3727</li>\n<li>3733</li>\n<li>3739</li>\n<li>3761</li>\n<li>3767</li>\n<li>3769</li>\n<li>3779</li>\n<li>3793</li>\n<li>3797</li>\n<li>3803</li>\n<li>3821</li>\n<li>3823</li>\n<li>3833</li>\n<li>3847</li>\n<li>3851</li>\n<li>3853</li>\n<li>3863</li>\n<li>3877</li>\n<li>3881</li>\n<li>3889</li>\n<li>3907</li>\n<li>3911</li>\n<li>3917</li>\n<li>3919</li>\n<li>3923</li>\n<li>3929</li>\n<li>3931</li>\n<li>3943</li>\n<li>3947</li>\n<li>3967</li>\n<li>3989</li>\n<li>4001</li>\n<li>4003</li>\n<li>4007</li>\n<li>4013</li>\n<li>4019</li>\n<li>4021</li>\n<li>4027</li>\n<li>4049</li>\n<li>4051</li>\n<li>4057</li>\n<li>4073</li>\n<li>4079</li>\n<li>4091</li>\n<li>4093</li>\n<li>4099</li>\n<li>4111</li>\n<li>4127</li>\n<li>4129</li>\n<li>4133</li>\n<li>4139</li>\n<li>4153</li>\n<li>4157</li>\n<li>4159</li>\n<li>4177</li>\n<li>4201</li>\n<li>4211</li>\n<li>4217</li>\n<li>4219</li>\n<li>4229</li>\n<li>4231</li>\n<li>4241</li>\n<li>4243</li>\n<li>4253</li>\n<li>4259</li>\n<li>4261</li>\n<li>4271</li>\n<li>4273</li>\n<li>4283</li>\n<li>4289</li>\n<li>4297</li>\n<li>4327</li>\n<li>4337</li>\n<li>4339</li>\n<li>4349</li>\n<li>4357</li>\n<li>4363</li>\n<li>4373</li>\n<li>4391</li>\n<li>4397</li>\n<li>4409</li>\n<li>4421</li>\n<li>4423</li>\n<li>4441</li>\n<li>4447</li>\n<li>4451</li>\n<li>4457</li>\n<li>4463</li>\n<li>4481</li>\n<li>4483</li>\n<li>4493</li>\n<li>4507</li>\n<li>4513</li>\n<li>4517</li>\n<li>4519</li>\n<li>4523</li>\n<li>4547</li>\n<li>4549</li>\n<li>4561</li>\n<li>4567</li>\n<li>4583</li>\n<li>4591</li>\n<li>4597</li>\n<li>4603</li>\n<li>4621</li>\n<li>4637</li>\n<li>4639</li>\n<li>4643</li>\n<li>4649</li>\n<li>4651</li>\n<li>4657</li>\n<li>4663</li>\n<li>4673</li>\n<li>4679</li>\n<li>4691</li>\n<li>4703</li>\n<li>4721</li>\n<li>4723</li>\n<li>4729</li>\n<li>4733</li>\n<li>4751</li>\n<li>4759</li>\n<li>4783</li>\n<li>4787</li>\n<li>4789</li>\n<li>4793</li>\n<li>4799</li>\n<li>4801</li>\n<li>4813</li>\n<li>4817</li>\n<li>4831</li>\n<li>4861</li>\n<li>4871</li>\n<li>4877</li>\n<li>4889</li>\n<li>4903</li>\n<li>4909</li>\n<li>4919</li>\n<li>4931</li>\n<li>4933</li>\n<li>4937</li>\n<li>4943</li>\n<li>4951</li>\n<li>4957</li>\n<li>4967</li>\n<li>4969</li>\n<li>4973</li>\n<li>4987</li>\n<li>4993</li>\n<li>4999</li>\n<li>5003</li>\n<li>5009</li>\n<li>5011</li>\n<li>5021</li>\n<li>5023</li>\n<li>5039</li>\n<li>5051</li>\n<li>5059</li>\n<li>5077</li>\n<li>5081</li>\n<li>5087</li>\n<li>5099</li>\n<li>5101</li>\n<li>5107</li>\n<li>5113</li>\n<li>5119</li>\n<li>5147</li>\n<li>5153</li>\n<li>5167</li>\n<li>5171</li>\n<li>5179</li>\n<li>5189</li>\n<li>5197</li>\n<li>5209</li>\n<li>5227</li>\n<li>5231</li>\n<li>5233</li>\n<li>5237</li>\n<li>5261</li>\n<li>5273</li>\n<li>5279</li>\n<li>5281</li>\n<li>5297</li>\n<li>5303</li>\n<li>5309</li>\n<li>5323</li>\n<li>5333</li>\n<li>5347</li>\n<li>5351</li>\n<li>5381</li>\n<li>5387</li>\n<li>5393</li>\n<li>5399</li>\n<li>5407</li>\n<li>5413</li>\n<li>5417</li>\n<li>5419</li>\n<li>5431</li>\n<li>5437</li>\n<li>5441</li>\n<li>5443</li>\n<li>5449</li>\n<li>5471</li>\n<li>5477</li>\n<li>5479</li>\n<li>5483</li>\n<li>5501</li>\n<li>5503</li>\n<li>5507</li>\n<li>5519</li>\n<li>5521</li>\n<li>5527</li>\n<li>5531</li>\n<li>5557</li>\n<li>5563</li>\n<li>5569</li>\n<li>5573</li>\n<li>5581</li>\n<li>5591</li>\n<li>5623</li>\n<li>5639</li>\n<li>5641</li>\n<li>5647</li>\n<li>5651</li>\n<li>5653</li>\n<li>5657</li>\n<li>5659</li>\n<li>5669</li>\n<li>5683</li>\n<li>5689</li>\n<li>5693</li>\n<li>5701</li>\n<li>5711</li>\n<li>5717</li>\n<li>5737</li>\n<li>5741</li>\n<li>5743</li>\n<li>5749</li>\n<li>5779</li>\n<li>5783</li>\n<li>5791</li>\n<li>5801</li>\n<li>5807</li>\n<li>5813</li>\n<li>5821</li>\n<li>5827</li>\n<li>5839</li>\n<li>5843</li>\n<li>5849</li>\n<li>5851</li>\n<li>5857</li>\n<li>5861</li>\n<li>5867</li>\n<li>5869</li>\n<li>5879</li>\n<li>5881</li>\n<li>5897</li>\n<li>5903</li>\n<li>5923</li>\n<li>5927</li>\n<li>5939</li>\n<li>5953</li>\n<li>5981</li>\n<li>5987</li>\n<li>6007</li>\n<li>6011</li>\n<li>6029</li>\n<li>6037</li>\n<li>6043</li>\n<li>6047</li>\n<li>6053</li>\n<li>6067</li>\n<li>6073</li>\n<li>6079</li>\n<li>6089</li>\n<li>6091</li>\n<li>6101</li>\n<li>6113</li>\n<li>6121</li>\n<li>6131</li>\n<li>6133</li>\n<li>6143</li>\n<li>6151</li>\n<li>6163</li>\n<li>6173</li>\n<li>6197</li>\n<li>6199</li>\n<li>6203</li>\n<li>6211</li>\n<li>6217</li>\n<li>6221</li>\n<li>6229</li>\n<li>6247</li>\n<li>6257</li>\n<li>6263</li>\n<li>6269</li>\n<li>6271</li>\n<li>6277</li>\n<li>6287</li>\n<li>6299</li>\n<li>6301</li>\n<li>6311</li>\n<li>6317</li>\n<li>6323</li>\n<li>6329</li>\n<li>6337</li>\n<li>6343</li>\n<li>6353</li>\n<li>6359</li>\n<li>6361</li>\n<li>6367</li>\n<li>6373</li>\n<li>6379</li>\n<li>6389</li>\n<li>6397</li>\n<li>6421</li>\n<li>6427</li>\n<li>6449</li>\n<li>6451</li>\n<li>6469</li>\n<li>6473</li>\n<li>6481</li>\n<li>6491</li>\n<li>6521</li>\n<li>6529</li>\n<li>6547</li>\n<li>6551</li>\n<li>6553</li>\n<li>6563</li>\n<li>6569</li>\n<li>6571</li>\n<li>6577</li>\n<li>6581</li>\n<li>6599</li>\n<li>6607</li>\n<li>6619</li>\n<li>6637</li>\n<li>6653</li>\n<li>6659</li>\n<li>6661</li>\n<li>6673</li>\n<li>6679</li>\n<li>6689</li>\n<li>6691</li>\n<li>6701</li>\n<li>6703</li>\n<li>6709</li>\n<li>6719</li>\n<li>6733</li>\n<li>6737</li>\n<li>6761</li>\n<li>6763</li>\n<li>6779</li>\n<li>6781</li>\n<li>6791</li>\n<li>6793</li>\n<li>6803</li>\n<li>6823</li>\n<li>6827</li>\n<li>6829</li>\n<li>6833</li>\n<li>6841</li>\n<li>6857</li>\n<li>6863</li>\n<li>6869</li>\n<li>6871</li>\n<li>6883</li>\n<li>6899</li>\n<li>6907</li>\n<li>6911</li>\n<li>6917</li>\n<li>6947</li>\n<li>6949</li>\n<li>6959</li>\n<li>6961</li>\n<li>6967</li>\n<li>6971</li>\n<li>6977</li>\n<li>6983</li>\n<li>6991</li>\n<li>6997</li>\n<li>7001</li>\n<li>7013</li>\n<li>7019</li>\n<li>7027</li>\n<li>7039</li>\n<li>7043</li>\n<li>7057</li>\n<li>7069</li>\n<li>7079</li>\n<li>7103</li>\n<li>7109</li>\n<li>7121</li>\n<li>7127</li>\n<li>7129</li>\n<li>7151</li>\n<li>7159</li>\n<li>7177</li>\n<li>7187</li>\n<li>7193</li>\n<li>7207</li>\n<li>7211</li>\n<li>7213</li>\n<li>7219</li>\n<li>7229</li>\n<li>7237</li>\n<li>7243</li>\n<li>7247</li>\n<li>7253</li>\n<li>7283</li>\n<li>7297</li>\n<li>7307</li>\n<li>7309</li>\n<li>7321</li>\n<li>7331</li>\n<li>7333</li>\n<li>7349</li>\n<li>7351</li>\n<li>7369</li>\n<li>7393</li>\n<li>7411</li>\n<li>7417</li>\n<li>7433</li>\n<li>7451</li>\n<li>7457</li>\n<li>7459</li>\n<li>7477</li>\n<li>7481</li>\n<li>7487</li>\n<li>7489</li>\n<li>7499</li>\n<li>7507</li>\n<li>7517</li>\n<li>7523</li>\n<li>7529</li>\n<li>7537</li>\n<li>7541</li>\n<li>7547</li>\n<li>7549</li>\n<li>7559</li>\n<li>7561</li>\n<li>7573</li>\n<li>7577</li>\n<li>7583</li>\n<li>7589</li>\n<li>7591</li>\n<li>7603</li>\n<li>7607</li>\n<li>7621</li>\n<li>7639</li>\n<li>7643</li>\n<li>7649</li>\n<li>7669</li>\n<li>7673</li>\n<li>7681</li>\n<li>7687</li>\n<li>7691</li>\n<li>7699</li>\n<li>7703</li>\n<li>7717</li>\n<li>7723</li>\n<li>7727</li>\n<li>7741</li>\n<li>7753</li>\n<li>7757</li>\n<li>7759</li>\n<li>7789</li>\n<li>7793</li>\n<li>7817</li>\n<li>7823</li>\n<li>7829</li>\n<li>7841</li>\n<li>7853</li>\n<li>7867</li>\n<li>7873</li>\n<li>7877</li>\n<li>7879</li>\n<li>7883</li>\n<li>7901</li>\n<li>7907</li>\n<li>7919</li>\n</ul>\n"}],"PostAsset":[{"_id":"source/_posts/BouingBouing/BouingBouing.gif","post":"cky6f5ofa0001cflz174f20mt","slug":"BouingBouing.gif","modified":1,"renderable":1},{"_id":"source/_posts/Git-server/soft-serve.png","post":"cky6f5ogy0003cflz2yre6ib0","slug":"soft-serve.png","modified":1,"renderable":1}],"PostCategory":[],"PostTag":[],"Tag":[]}}